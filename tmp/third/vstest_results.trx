<?xml version="1.0" encoding="utf-8"?>
<TestRun id="00000000-0000-0000-91c4-30db1d215203" runUser="TeamBuildServerTeamBuildUser" name="TeamBuildUser@TeamBuildServer 2016-03-14T12:54:57" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local Test Run" id="c136642c-2e64-4f99-9ec3-30db1d215203">
    <Description>This is a default test run configuration for a local test run.</Description>
    <Deployment runDeploymentRoot="">
      <DeploymentItem filename="" />
    </Deployment>
  </TestSettings>
  <ResultSummary outcome="Completed">
    <Counters error="0" timeout="0" aborted="0" passedButRunAborted="0" notRunnable="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" total="2" executed="2" notExecuted="0" passed="2" failed="0" inconclusive="0" />
    <RunInfos />
  </ResultSummary>
  <Times creation="2016-03-14T12:54:57" queuing="2016-03-14T12:54:57" start="2016-03-14T12:54:57" finish="2016-03-14T12:54:57" />
  <TestDefinitions>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecificSpecTester.RunThisSpec" storage="" id="00000000-0000-0000-91c4-000000000001">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000001" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunThisSpec" codeBase="" className="App.Db.Slacker.SlackerRunner.SpecificSpecTester, App" />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_code_part.rb)" storage="" id="00000000-0000-0000-91c4-000000000002">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000002" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="App.Db.Slacker.SlackerRunner.SpecsTester, App" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecificSpecTester.RunThisSpec" storage="" id="00000000-0000-0000-91c4-000000000003">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000003" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunThisSpec" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecificSpecTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_authorization_verdict.rb)" storage="" id="00000000-0000-0000-91c4-000000000004">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000004" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_role_authorization_permission.rb)" storage="" id="00000000-0000-0000-91c4-000000000005">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000005" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_user_role_strands.rb)" storage="" id="00000000-0000-0000-91c4-000000000006">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000006" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(client_format/boolean_to_client_format.rb)" storage="" id="00000000-0000-0000-91c4-000000000007">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000007" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_code_part.rb)" storage="" id="00000000-0000-0000-91c4-000000000008">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000008" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_get.rb)" storage="" id="00000000-0000-0000-91c4-000000000009">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000009" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_put.rb)" storage="" id="00000000-0000-0000-91c4-00000000000A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000000A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/tf_config_value.rb)" storage="" id="00000000-0000-0000-91c4-00000000000B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000000B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(context_info/context_info.rb)" storage="" id="00000000-0000-0000-91c4-00000000000C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000000C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(excel_export/excel_export_meta.rb)" storage="" id="00000000-0000-0000-91c4-00000000000D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000000D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(excel_export/excel_export_seed.rb)" storage="" id="00000000-0000-0000-91c4-00000000000E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000000E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(holiday_schedule/put_get.rb)" storage="" id="00000000-0000-0000-91c4-00000000000F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000000F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/is_valid_lookup_code.rb)" storage="" id="00000000-0000-0000-91c4-000000000010">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000010" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/lookup_code_description.rb)" storage="" id="00000000-0000-0000-91c4-000000000011">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000011" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/tf_lookup_code.rb)" storage="" id="00000000-0000-0000-91c4-000000000012">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000012" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_type/put_get.rb)" storage="" id="00000000-0000-0000-91c4-000000000013">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000013" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(message/tf_message.rb)" storage="" id="00000000-0000-0000-91c4-000000000014">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000014" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(model/model_field_base_type_name.rb)" storage="" id="00000000-0000-0000-91c4-000000000015">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000015" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(model/model_type_format.rb)" storage="" id="00000000-0000-0000-91c4-000000000016">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000016" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(operation_result/add_operation_message.rb)" storage="" id="00000000-0000-0000-91c4-000000000017">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000017" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(report_destination/report_destination_seed.rb)" storage="" id="00000000-0000-0000-91c4-000000000018">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000018" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/separated_string_to_string_list.rb)" storage="" id="00000000-0000-0000-91c4-000000000019">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000019" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/string_list_to_table.rb)" storage="" id="00000000-0000-0000-91c4-00000000001A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000001A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/table_to_string_list.rb)" storage="" id="00000000-0000-0000-91c4-00000000001B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000001B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/maker_checker.rb)" storage="" id="00000000-0000-0000-91c4-00000000001C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000001C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/role_put.rb)" storage="" id="00000000-0000-0000-91c4-00000000001D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000001D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_del.rb)" storage="" id="00000000-0000-0000-91c4-00000000001E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000001E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_id.rb)" storage="" id="00000000-0000-0000-91c4-00000000001F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000001F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_put.rb)" storage="" id="00000000-0000-0000-91c4-000000000020">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000020" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_put_get.rb)" storage="" id="00000000-0000-0000-91c4-000000000021">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000021" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_role_association_action.rb)" storage="" id="00000000-0000-0000-91c4-000000000022">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000022" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RunSpecs" codeBase="" className="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if characters are passed when expecting numbers." storage="" id="00000000-0000-0000-91c4-000000000023">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000023" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if numbers are passed when expecting numbers." storage="" id="00000000-0000-0000-91c4-000000000024">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000024" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting date in MMM/d/yyyy." storage="" id="00000000-0000-0000-91c4-000000000025">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000025" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting date in MMMM/d/yyyy." storage="" id="00000000-0000-0000-91c4-000000000026">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000026" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting literals." storage="" id="00000000-0000-0000-91c4-000000000027">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000027" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if numbers are passed to escaped numeric format value." storage="" id="00000000-0000-0000-91c4-000000000028">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000028" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if date are passed when expecting date." storage="" id="00000000-0000-0000-91c4-000000000029">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000029" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if month is passed when expecting month." storage="" id="00000000-0000-0000-91c4-00000000002A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000002A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if day of week is passed when expecting day of week." storage="" id="00000000-0000-0000-91c4-00000000002B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000002B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if date and time are passed when expecting date and time." storage="" id="00000000-0000-0000-91c4-00000000002C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000002C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats year values correctly." storage="" id="00000000-0000-0000-91c4-00000000002D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000002D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateToClientFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats month values correctly." storage="" id="00000000-0000-0000-91c4-00000000002E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000002E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateToClientFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats weekday values correctly." storage="" id="00000000-0000-0000-91c4-00000000002F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000002F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateToClientFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats day of the month values correctly." storage="" id="00000000-0000-0000-91c4-000000000030">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000030" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateToClientFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats hour values correctly." storage="" id="00000000-0000-0000-91c4-000000000031">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000031" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateToClientFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats second values correctly." storage="" id="00000000-0000-0000-91c4-000000000032">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000032" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateToClientFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats special cases and complex formats correctly." storage="" id="00000000-0000-0000-91c4-000000000033">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000033" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateToClientFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it passes performance test for large number of iterations" storage="" id="00000000-0000-0000-91c4-000000000034">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000034" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DateTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.DateToClientFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns true if characters are passed when expecting numbers." storage="" id="00000000-0000-0000-91c4-000000000035">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000035" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="NumberIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.NumberIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed when expecting numbers." storage="" id="00000000-0000-0000-91c4-000000000036">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000036" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="NumberIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.NumberIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed when expecting numbers with additional format info." storage="" id="00000000-0000-0000-91c4-000000000037">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000037" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="NumberIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.NumberIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed with empty format." storage="" id="00000000-0000-0000-91c4-000000000038">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000038" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="NumberIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.NumberIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns true if characters are passed with empty format." storage="" id="00000000-0000-0000-91c4-000000000039">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000039" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="NumberIsInvalidClientFormatTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.NumberIsInvalidFormatSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Text.RegexReplace, it replaces non-numeric values correctly." storage="" id="00000000-0000-0000-91c4-00000000003A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000003A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="RegexReplaceTest" codeBase="" className="Beachcomber.Db.SqlClr.Spec.TextRegexReplaceSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a preset ActiveDirectoryGroupMonitor.DbCodeToTimerMap, ActiveDirectoryGroupMonitor correctly monitors the groups" storage="" id="00000000-0000-0000-91c4-00000000003B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000003B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="PollSpec" codeBase="" className="Beachcomber.Lib.Spec.ActiveDirectoryGroupMonitorSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a set of templates, the template is generated successfully" storage="" id="00000000-0000-0000-91c4-00000000003C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000003C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="TemplateSpecAll" codeBase="" className="Beachcomber.Lib.Spec.BeachcomberRazorTemplateSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a BrokerQueueClient should be able to process one message at a time" storage="" id="00000000-0000-0000-91c4-00000000003D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000003D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="BrokerQueueClientTest" codeBase="" className="Beachcomber.Lib.Spec.BrokerQueueClientSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a BrokerQueueClient should be able to process multiple messages at a time" storage="" id="00000000-0000-0000-91c4-00000000003E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000003E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="BrokerQueueClientTest" codeBase="" className="Beachcomber.Lib.Spec.BrokerQueueClientSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given CommonMarkHelper, it correctly converts a Markdown input to a text input" storage="" id="00000000-0000-0000-91c4-00000000003F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000003F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DetailsTagTest" codeBase="" className="Beachcomber.Lib.Spec.CommonMarkHelperSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given CommonMarkHelper, it correctly converts a Markdown input to HTML input" storage="" id="00000000-0000-0000-91c4-000000000040">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000040" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DetailsTagTest" codeBase="" className="Beachcomber.Lib.Spec.CommonMarkHelperSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a model specification can be extracted based on a model stored procedure" storage="" id="00000000-0000-0000-91c4-000000000041">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000041" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DbModelProcessing" codeBase="" className="Beachcomber.Lib.Spec.DbModelProcessorSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a deep model tree can be generated based on a single model name" storage="" id="00000000-0000-0000-91c4-000000000042">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000042" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DbModelProcessing" codeBase="" className="Beachcomber.Lib.Spec.DbModelProcessorSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a deep model tree can be deducted based on a list of model names" storage="" id="00000000-0000-0000-91c4-000000000043">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000043" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DbModelProcessing" codeBase="" className="Beachcomber.Lib.Spec.DbModelProcessorSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, the system throws an exception when trying to get a non-existing model" storage="" id="00000000-0000-0000-91c4-000000000044">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000044" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DbModelProcessing" codeBase="" className="Beachcomber.Lib.Spec.DbModelProcessorSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, tag &quot;bullet_details&quot; is correctly registered and performs as expected" storage="" id="00000000-0000-0000-91c4-000000000045">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000045" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DetailsTagTest" codeBase="" className="Beachcomber.Lib.Spec.DotLiquidExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, tag &quot;bullet_list&quot; is correctly registered and performs as expected" storage="" id="00000000-0000-0000-91c4-000000000046">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000046" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DetailsTagTest" codeBase="" className="Beachcomber.Lib.Spec.DotLiquidExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, filter &quot;zn&quot; is correctly registered and performs as expected" storage="" id="00000000-0000-0000-91c4-000000000047">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000047" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DetailsTagTest" codeBase="" className="Beachcomber.Lib.Spec.DotLiquidExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, filter &quot;markdown&quot; is correctly registered and performs as expected" storage="" id="00000000-0000-0000-91c4-000000000048">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000048" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DetailsTagTest" codeBase="" className="Beachcomber.Lib.Spec.DotLiquidExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, ExcelExportDatasetDimensions can be used in a dotLiquid template to perform arithmetic operations" storage="" id="00000000-0000-0000-91c4-000000000049">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000049" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DetailsTagTest" codeBase="" className="Beachcomber.Lib.Spec.DotLiquidExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport handles hierarchical data" storage="" id="00000000-0000-0000-91c4-00000000004A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000004A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ColumnAddress works as expected" storage="" id="00000000-0000-0000-91c4-00000000004B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000004B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures and appropriately overrides the return_type request parameter" storage="" id="00000000-0000-0000-91c4-00000000004C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000004C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles various style exports" storage="" id="00000000-0000-0000-91c4-00000000004D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000004D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures with custom Excel template" storage="" id="00000000-0000-0000-91c4-00000000004E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000004E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures by calling them with return_type=EXCEL" storage="" id="00000000-0000-0000-91c4-00000000004F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000004F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly uses the custom excel target file returned by the metadata" storage="" id="00000000-0000-0000-91c4-000000000050">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000050" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly generates output file name based on the grid title" storage="" id="00000000-0000-0000-91c4-000000000051">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000051" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures with custom Excel templates" storage="" id="00000000-0000-0000-91c4-000000000052">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000052" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport populates a default excel workbook with the resultset of a stored procedure" storage="" id="00000000-0000-0000-91c4-000000000053">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000053" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport populates an excel workbook with multiple resultsets from a stored procedure" storage="" id="00000000-0000-0000-91c4-000000000054">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000054" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles type conversions" storage="" id="00000000-0000-0000-91c4-000000000055">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000055" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles Excel export metadata" storage="" id="00000000-0000-0000-91c4-000000000056">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000056" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExcelExportSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExcelExportSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an ExecutionSurface with preloaded test data, the surface contents is as expected" storage="" id="00000000-0000-0000-91c4-000000000057">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000057" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExecutionSurfaceSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExecutionSurfaceSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an ExecutionSurface with preloaded test data, authorization works as expected" storage="" id="00000000-0000-0000-91c4-000000000058">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000058" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExecutionSurfaceSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExecutionSurfaceSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an ExecutionSurface with preloaded test data, authorization works as expected as it relates to role inheritance" storage="" id="00000000-0000-0000-91c4-000000000059">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000059" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ExecutionSurfaceSpecAll" codeBase="" className="Beachcomber.Lib.Spec.ExecutionSurfaceSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an Xml string with an array, it correctly gets converted to an IEnumerable" storage="" id="00000000-0000-0000-91c4-00000000005A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000005A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="XmlToFlexSpecArrays" codeBase="" className="Beachcomber.Lib.Spec.ExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an object and a Flex, extension method ToObject properly populates an object with the contents of a Flex" storage="" id="00000000-0000-0000-91c4-00000000005B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000005B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ToObjectSpec" codeBase="" className="Beachcomber.Lib.Spec.ExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an object and a Flex, extension method ToObject properly populates an object with the contents of a Flex ins strict mode" storage="" id="00000000-0000-0000-91c4-00000000005C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000005C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ToObjectSpec" codeBase="" className="Beachcomber.Lib.Spec.ExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an object and a Flex, extension method ToObject properly throws in strict mode" storage="" id="00000000-0000-0000-91c4-00000000005D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000005D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ToObjectSpec" codeBase="" className="Beachcomber.Lib.Spec.ExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a Flex object, it correctly gets converted to an Xml string" storage="" id="00000000-0000-0000-91c4-00000000005E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000005E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="FlexToXmlSpec" codeBase="" className="Beachcomber.Lib.Spec.ExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an Xml string, it can be converted to a Flex" storage="" id="00000000-0000-0000-91c4-00000000005F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000005F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="XmlToFlexSpec" codeBase="" className="Beachcomber.Lib.Spec.ExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an IEnumerable&lt;T&gt;, extension method ForEach can be used to enumerate all its elements" storage="" id="00000000-0000-0000-91c4-000000000060">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000060" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ForEachSpec" codeBase="" className="Beachcomber.Lib.Spec.ExtensionsSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Flex, it can be converted to Json" storage="" id="00000000-0000-0000-91c4-000000000061">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000061" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="UnderscoreSpec" codeBase="" className="Beachcomber.Lib.Spec.FlexSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given Flex, a Json value can be converted to a Flex" storage="" id="00000000-0000-0000-91c4-000000000062">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000062" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="UnderscoreSpec" codeBase="" className="Beachcomber.Lib.Spec.FlexSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a grid meta can converted to Json" storage="" id="00000000-0000-0000-91c4-000000000063">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000063" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="MetaJsonSpec" codeBase="" className="Beachcomber.Lib.Spec.GridMetaSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a string, it can be underscored using the Inflector extension methods" storage="" id="00000000-0000-0000-91c4-000000000064">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000064" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="UnderscoreSpec" codeBase="" className="Beachcomber.Lib.Spec.InflectorSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an arbitrary anonymous object, it correctly converts it to a Json string" storage="" id="00000000-0000-0000-91c4-000000000065">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000065" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="AnonymousObjectToJsonSpec" codeBase="" className="Beachcomber.Lib.Spec.JsonHelperSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given an arbitrary Flex, it correctly converts it to a Json string" storage="" id="00000000-0000-0000-91c4-000000000066">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000066" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="FlexToJsonSpec" codeBase="" className="Beachcomber.Lib.Spec.JsonHelperSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a Json string, it correctly converts it to a .NET object" storage="" id="00000000-0000-0000-91c4-000000000067">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000067" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="JsonToObject" codeBase="" className="Beachcomber.Lib.Spec.JsonHelperSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, calling a sproc which divides by zero throws an exception (ANSI_WARNINGS is set to ON)" storage="" id="00000000-0000-0000-91c4-000000000068">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000068" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs can be executed dynamically through its Sproc property" storage="" id="00000000-0000-0000-91c4-000000000069">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000069" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs with named params can be invoked" storage="" id="00000000-0000-0000-91c4-00000000006A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000006A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs with optional params can be invoked" storage="" id="00000000-0000-0000-91c4-00000000006B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000006B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs with 'out' params can be invoked" storage="" id="00000000-0000-0000-91c4-00000000006C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000006C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs with xml 'out' params can be invoked" storage="" id="00000000-0000-0000-91c4-00000000006D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000006D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc can be called with arbitrary number of parameters - it will ignore parameters which it does not accept" storage="" id="00000000-0000-0000-91c4-00000000006E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000006E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an array of objects is passed to the udnerlying sproc as a table" storage="" id="00000000-0000-0000-91c4-00000000006F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000006F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an array with disjointed elements can be passed as a parameter to a sproc which takes a table valued parameter" storage="" id="00000000-0000-0000-91c4-000000000070">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000070" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a complex object can be passed to a sproc which takes an XML input parameter" storage="" id="00000000-0000-0000-91c4-000000000071">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000071" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an object is passed to the udnerlying sproc as a table" storage="" id="00000000-0000-0000-91c4-000000000072">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000072" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an array of objects is passed to the udnerlying sproc as a table and used by it" storage="" id="00000000-0000-0000-91c4-000000000073">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000073" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc's resultset which contains a hierarchy_child_id and hierarchy_parent_id is compiled into a hierarchical resultset" storage="" id="00000000-0000-0000-91c4-000000000074">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000074" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a hierarchical result pushes all orphans to the top of the hierarchy" storage="" id="00000000-0000-0000-91c4-000000000075">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000075" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a hierarchical result does not omit children of missing parents when there is a single record in the recordset" storage="" id="00000000-0000-0000-91c4-000000000076">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000076" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a hierarchical result omits shallow circular reference chains" storage="" id="00000000-0000-0000-91c4-000000000077">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000077" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a hierarchical result omits deep circular reference chains" storage="" id="00000000-0000-0000-91c4-000000000078">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000078" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc which accepts INT parameters can be called with a string representation of an INT" storage="" id="00000000-0000-0000-91c4-000000000079">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000079" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc which accepts INT parameters can be called with an empty string which is internally converted to NULL" storage="" id="00000000-0000-0000-91c4-00000000007A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000007A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc returns an error message in the operation result and stops the sproc execution when an error message is reported" storage="" id="00000000-0000-0000-91c4-00000000007B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000007B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an error message includes the SQL call-stack when enabled" storage="" id="00000000-0000-0000-91c4-00000000007C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000007C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc returns a warning message in the operation result and stops the sproc execution when a warning message is reported" storage="" id="00000000-0000-0000-91c4-00000000007D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000007D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc returns an info message in the operation result and does not stop the sproc execution when an info message is reported" storage="" id="00000000-0000-0000-91c4-00000000007E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000007E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc can respond with a collection of messages" storage="" id="00000000-0000-0000-91c4-00000000007F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000007F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a nested sproc returns an error message in the operation result and stops the sproc execution when an error message is reported" storage="" id="00000000-0000-0000-91c4-000000000080">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000080" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a nested sproc returns a warning message in the operation result and stops the sproc execution when a warning message is reported" storage="" id="00000000-0000-0000-91c4-000000000081">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000081" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a nested sproc returns an info message in the operation result and does not stop the sproc execution when an info message is reported" storage="" id="00000000-0000-0000-91c4-000000000082">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000082" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a nested sproc can respond with a collection of messages" storage="" id="00000000-0000-0000-91c4-000000000083">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000083" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc can be called with a pre and post closure with an open connection" storage="" id="00000000-0000-0000-91c4-000000000084">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000084" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocSpecAll" codeBase="" className="Beachcomber.Lib.Spec.SprocSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController can be used to import an Excel file directly into a table" storage="" id="00000000-0000-0000-91c4-000000000085">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000085" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ImportSpec" codeBase="" className="Beachcomber.Web.Spec.DirectFileControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController offers option to load worksheets with missing fields" storage="" id="00000000-0000-0000-91c4-000000000086">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000086" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ImportSpec" codeBase="" className="Beachcomber.Web.Spec.DirectFileControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController offers option to load worksheets with extra fields" storage="" id="00000000-0000-0000-91c4-000000000087">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000087" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ImportSpec" codeBase="" className="Beachcomber.Web.Spec.DirectFileControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController detects missing worksheets" storage="" id="00000000-0000-0000-91c4-000000000088">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000088" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ImportSpec" codeBase="" className="Beachcomber.Web.Spec.DirectFileControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController offers an option to run a post-load stored procedure as part of the import operation" storage="" id="00000000-0000-0000-91c4-000000000089">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000089" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ImportSpec" codeBase="" className="Beachcomber.Web.Spec.DirectFileControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController correctly processes operation result messages generated by the post-load stored procedure" storage="" id="00000000-0000-0000-91c4-00000000008A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000008A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="ImportSpec" codeBase="" className="Beachcomber.Web.Spec.DirectFileControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Assert" storage="" id="00000000-0000-0000-91c4-00000000008B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000008B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DbCallSpec" codeBase="" className="Beachcomber.Web.Spec.ModelControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a single property-value filter is specified as a request parameter" storage="" id="00000000-0000-0000-91c4-00000000008C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000008C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a multi property-value filter is specified as a request parameter" storage="" id="00000000-0000-0000-91c4-00000000008D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000008D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when an exact string match filter is executed" storage="" id="00000000-0000-0000-91c4-00000000008E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000008E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when an exact string match filter is executed with the wrong string value" storage="" id="00000000-0000-0000-91c4-00000000008F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000008F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a &quot;like&quot; string match filter is executed" storage="" id="00000000-0000-0000-91c4-000000000090">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000090" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when an exact string match filter is executed with the wrong string value" storage="" id="00000000-0000-0000-91c4-000000000091">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000091" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric greater than comparison is executed" storage="" id="00000000-0000-0000-91c4-000000000092">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000092" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric greater than comparison is executed with a number equal to the max" storage="" id="00000000-0000-0000-91c4-000000000093">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000093" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric less than comparison is executed" storage="" id="00000000-0000-0000-91c4-000000000094">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000094" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric less than comparison is executed with a number equal to the min" storage="" id="00000000-0000-0000-91c4-000000000095">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000095" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric equal to comparison is executed" storage="" id="00000000-0000-0000-91c4-000000000096">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000096" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric equal to comparison is executed with a number which does not exist in the database model" storage="" id="00000000-0000-0000-91c4-000000000097">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000097" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date greater than comparison is executed" storage="" id="00000000-0000-0000-91c4-000000000098">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000098" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date greater than comparison is executed with a number equal to the max" storage="" id="00000000-0000-0000-91c4-000000000099">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-000000000099" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date less than comparison is executed" storage="" id="00000000-0000-0000-91c4-00000000009A">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000009A" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date less than comparison is executed with a number equal to the min" storage="" id="00000000-0000-0000-91c4-00000000009B">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000009B" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date equal to comparison is executed" storage="" id="00000000-0000-0000-91c4-00000000009C">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000009C" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date equal to comparison is executed with a date which does not exist in the database model" storage="" id="00000000-0000-0000-91c4-00000000009D">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000009D" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when true boolean equal to comparison is executed" storage="" id="00000000-0000-0000-91c4-00000000009E">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000009E" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when false boolean equal to comparison is executed" storage="" id="00000000-0000-0000-91c4-00000000009F">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-00000000009F" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when true boolean equal to comparison is executed against a field which is all false" storage="" id="00000000-0000-0000-91c4-0000000000A0">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A0" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when false boolean equal to comparison is executed against a field which is all true" storage="" id="00000000-0000-0000-91c4-0000000000A1">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A1" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocFilteredGetSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController can call simple sprocs with parameters" storage="" id="00000000-0000-0000-91c4-0000000000A2">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A2" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocCallSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController correctly handles ISO 8601 dates as parameters" storage="" id="00000000-0000-0000-91c4-0000000000A3">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A3" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocCallSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController can call sprocs with XML out parameters" storage="" id="00000000-0000-0000-91c4-0000000000A4">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A4" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocCallSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController correctly handles XML typed elements" storage="" id="00000000-0000-0000-91c4-0000000000A5">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A5" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocCallSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController correctly reports field SQL data types" storage="" id="00000000-0000-0000-91c4-0000000000A6">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A6" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocCallSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a list of records on GET without a specified ID" storage="" id="00000000-0000-0000-91c4-0000000000A7">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A7" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocCallSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a single record when GET is called with an ID parameter" storage="" id="00000000-0000-0000-91c4-0000000000A8">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A8" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocCallSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller creates a single new record when _put sproc is called" storage="" id="00000000-0000-0000-91c4-0000000000A9">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000A9" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocCallSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller performs a record edit when _put sproc is called on an existing record" storage="" id="00000000-0000-0000-91c4-0000000000AA">
      <Css projectStructure="" iteration="" />
      <Owners>
        <Owner name="" />
      </Owners>
      <Execution id="00000000-0000-0000-91c4-0000000000AA" />
      <TestMethod adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="SprocCallSpec" codeBase="" className="Beachcomber.Web.Spec.SprocControllerSpec, Beachcomber" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000001" executionId="00000000-0000-0000-91c4-000000000001" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000002" executionId="00000000-0000-0000-91c4-000000000002" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000003" executionId="00000000-0000-0000-91c4-000000000003" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000004" executionId="00000000-0000-0000-91c4-000000000004" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000005" executionId="00000000-0000-0000-91c4-000000000005" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000006" executionId="00000000-0000-0000-91c4-000000000006" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000007" executionId="00000000-0000-0000-91c4-000000000007" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000008" executionId="00000000-0000-0000-91c4-000000000008" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000009" executionId="00000000-0000-0000-91c4-000000000009" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000000A" executionId="00000000-0000-0000-91c4-00000000000A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000000B" executionId="00000000-0000-0000-91c4-00000000000B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000000C" executionId="00000000-0000-0000-91c4-00000000000C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000000D" executionId="00000000-0000-0000-91c4-00000000000D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000000E" executionId="00000000-0000-0000-91c4-00000000000E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000000F" executionId="00000000-0000-0000-91c4-00000000000F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000010" executionId="00000000-0000-0000-91c4-000000000010" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000011" executionId="00000000-0000-0000-91c4-000000000011" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000012" executionId="00000000-0000-0000-91c4-000000000012" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000013" executionId="00000000-0000-0000-91c4-000000000013" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000014" executionId="00000000-0000-0000-91c4-000000000014" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000015" executionId="00000000-0000-0000-91c4-000000000015" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000016" executionId="00000000-0000-0000-91c4-000000000016" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000017" executionId="00000000-0000-0000-91c4-000000000017" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000018" executionId="00000000-0000-0000-91c4-000000000018" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000019" executionId="00000000-0000-0000-91c4-000000000019" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000001A" executionId="00000000-0000-0000-91c4-00000000001A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000001B" executionId="00000000-0000-0000-91c4-00000000001B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000001C" executionId="00000000-0000-0000-91c4-00000000001C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000001D" executionId="00000000-0000-0000-91c4-00000000001D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000001E" executionId="00000000-0000-0000-91c4-00000000001E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000001F" executionId="00000000-0000-0000-91c4-00000000001F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000020" executionId="00000000-0000-0000-91c4-000000000020" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000021" executionId="00000000-0000-0000-91c4-000000000021" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000022" executionId="00000000-0000-0000-91c4-000000000022" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000023" executionId="00000000-0000-0000-91c4-000000000023" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000024" executionId="00000000-0000-0000-91c4-000000000024" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000025" executionId="00000000-0000-0000-91c4-000000000025" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000026" executionId="00000000-0000-0000-91c4-000000000026" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000027" executionId="00000000-0000-0000-91c4-000000000027" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000028" executionId="00000000-0000-0000-91c4-000000000028" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000029" executionId="00000000-0000-0000-91c4-000000000029" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000002A" executionId="00000000-0000-0000-91c4-00000000002A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000002B" executionId="00000000-0000-0000-91c4-00000000002B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000002C" executionId="00000000-0000-0000-91c4-00000000002C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000002D" executionId="00000000-0000-0000-91c4-00000000002D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000002E" executionId="00000000-0000-0000-91c4-00000000002E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000002F" executionId="00000000-0000-0000-91c4-00000000002F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000030" executionId="00000000-0000-0000-91c4-000000000030" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000031" executionId="00000000-0000-0000-91c4-000000000031" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000032" executionId="00000000-0000-0000-91c4-000000000032" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000033" executionId="00000000-0000-0000-91c4-000000000033" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000034" executionId="00000000-0000-0000-91c4-000000000034" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000035" executionId="00000000-0000-0000-91c4-000000000035" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000036" executionId="00000000-0000-0000-91c4-000000000036" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000037" executionId="00000000-0000-0000-91c4-000000000037" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000038" executionId="00000000-0000-0000-91c4-000000000038" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000039" executionId="00000000-0000-0000-91c4-000000000039" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000003A" executionId="00000000-0000-0000-91c4-00000000003A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000003B" executionId="00000000-0000-0000-91c4-00000000003B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000003C" executionId="00000000-0000-0000-91c4-00000000003C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000003D" executionId="00000000-0000-0000-91c4-00000000003D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000003E" executionId="00000000-0000-0000-91c4-00000000003E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000003F" executionId="00000000-0000-0000-91c4-00000000003F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000040" executionId="00000000-0000-0000-91c4-000000000040" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000041" executionId="00000000-0000-0000-91c4-000000000041" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000042" executionId="00000000-0000-0000-91c4-000000000042" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000043" executionId="00000000-0000-0000-91c4-000000000043" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000044" executionId="00000000-0000-0000-91c4-000000000044" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000045" executionId="00000000-0000-0000-91c4-000000000045" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000046" executionId="00000000-0000-0000-91c4-000000000046" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000047" executionId="00000000-0000-0000-91c4-000000000047" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000048" executionId="00000000-0000-0000-91c4-000000000048" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000049" executionId="00000000-0000-0000-91c4-000000000049" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000004A" executionId="00000000-0000-0000-91c4-00000000004A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000004B" executionId="00000000-0000-0000-91c4-00000000004B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000004C" executionId="00000000-0000-0000-91c4-00000000004C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000004D" executionId="00000000-0000-0000-91c4-00000000004D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000004E" executionId="00000000-0000-0000-91c4-00000000004E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000004F" executionId="00000000-0000-0000-91c4-00000000004F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000050" executionId="00000000-0000-0000-91c4-000000000050" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000051" executionId="00000000-0000-0000-91c4-000000000051" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000052" executionId="00000000-0000-0000-91c4-000000000052" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000053" executionId="00000000-0000-0000-91c4-000000000053" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000054" executionId="00000000-0000-0000-91c4-000000000054" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000055" executionId="00000000-0000-0000-91c4-000000000055" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000056" executionId="00000000-0000-0000-91c4-000000000056" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000057" executionId="00000000-0000-0000-91c4-000000000057" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000058" executionId="00000000-0000-0000-91c4-000000000058" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000059" executionId="00000000-0000-0000-91c4-000000000059" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000005A" executionId="00000000-0000-0000-91c4-00000000005A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000005B" executionId="00000000-0000-0000-91c4-00000000005B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000005C" executionId="00000000-0000-0000-91c4-00000000005C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000005D" executionId="00000000-0000-0000-91c4-00000000005D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000005E" executionId="00000000-0000-0000-91c4-00000000005E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000005F" executionId="00000000-0000-0000-91c4-00000000005F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000060" executionId="00000000-0000-0000-91c4-000000000060" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000061" executionId="00000000-0000-0000-91c4-000000000061" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000062" executionId="00000000-0000-0000-91c4-000000000062" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000063" executionId="00000000-0000-0000-91c4-000000000063" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000064" executionId="00000000-0000-0000-91c4-000000000064" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000065" executionId="00000000-0000-0000-91c4-000000000065" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000066" executionId="00000000-0000-0000-91c4-000000000066" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000067" executionId="00000000-0000-0000-91c4-000000000067" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000068" executionId="00000000-0000-0000-91c4-000000000068" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000069" executionId="00000000-0000-0000-91c4-000000000069" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000006A" executionId="00000000-0000-0000-91c4-00000000006A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000006B" executionId="00000000-0000-0000-91c4-00000000006B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000006C" executionId="00000000-0000-0000-91c4-00000000006C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000006D" executionId="00000000-0000-0000-91c4-00000000006D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000006E" executionId="00000000-0000-0000-91c4-00000000006E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000006F" executionId="00000000-0000-0000-91c4-00000000006F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000070" executionId="00000000-0000-0000-91c4-000000000070" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000071" executionId="00000000-0000-0000-91c4-000000000071" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000072" executionId="00000000-0000-0000-91c4-000000000072" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000073" executionId="00000000-0000-0000-91c4-000000000073" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000074" executionId="00000000-0000-0000-91c4-000000000074" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000075" executionId="00000000-0000-0000-91c4-000000000075" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000076" executionId="00000000-0000-0000-91c4-000000000076" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000077" executionId="00000000-0000-0000-91c4-000000000077" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000078" executionId="00000000-0000-0000-91c4-000000000078" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000079" executionId="00000000-0000-0000-91c4-000000000079" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000007A" executionId="00000000-0000-0000-91c4-00000000007A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000007B" executionId="00000000-0000-0000-91c4-00000000007B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000007C" executionId="00000000-0000-0000-91c4-00000000007C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000007D" executionId="00000000-0000-0000-91c4-00000000007D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000007E" executionId="00000000-0000-0000-91c4-00000000007E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000007F" executionId="00000000-0000-0000-91c4-00000000007F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000080" executionId="00000000-0000-0000-91c4-000000000080" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000081" executionId="00000000-0000-0000-91c4-000000000081" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000082" executionId="00000000-0000-0000-91c4-000000000082" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000083" executionId="00000000-0000-0000-91c4-000000000083" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000084" executionId="00000000-0000-0000-91c4-000000000084" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000085" executionId="00000000-0000-0000-91c4-000000000085" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000086" executionId="00000000-0000-0000-91c4-000000000086" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000087" executionId="00000000-0000-0000-91c4-000000000087" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000088" executionId="00000000-0000-0000-91c4-000000000088" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000089" executionId="00000000-0000-0000-91c4-000000000089" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000008A" executionId="00000000-0000-0000-91c4-00000000008A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000008B" executionId="00000000-0000-0000-91c4-00000000008B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000008C" executionId="00000000-0000-0000-91c4-00000000008C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000008D" executionId="00000000-0000-0000-91c4-00000000008D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000008E" executionId="00000000-0000-0000-91c4-00000000008E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000008F" executionId="00000000-0000-0000-91c4-00000000008F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000090" executionId="00000000-0000-0000-91c4-000000000090" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000091" executionId="00000000-0000-0000-91c4-000000000091" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000092" executionId="00000000-0000-0000-91c4-000000000092" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000093" executionId="00000000-0000-0000-91c4-000000000093" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000094" executionId="00000000-0000-0000-91c4-000000000094" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000095" executionId="00000000-0000-0000-91c4-000000000095" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000096" executionId="00000000-0000-0000-91c4-000000000096" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000097" executionId="00000000-0000-0000-91c4-000000000097" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000098" executionId="00000000-0000-0000-91c4-000000000098" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-000000000099" executionId="00000000-0000-0000-91c4-000000000099" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000009A" executionId="00000000-0000-0000-91c4-00000000009A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000009B" executionId="00000000-0000-0000-91c4-00000000009B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000009C" executionId="00000000-0000-0000-91c4-00000000009C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000009D" executionId="00000000-0000-0000-91c4-00000000009D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000009E" executionId="00000000-0000-0000-91c4-00000000009E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-00000000009F" executionId="00000000-0000-0000-91c4-00000000009F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A0" executionId="00000000-0000-0000-91c4-0000000000A0" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A1" executionId="00000000-0000-0000-91c4-0000000000A1" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A2" executionId="00000000-0000-0000-91c4-0000000000A2" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A3" executionId="00000000-0000-0000-91c4-0000000000A3" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A4" executionId="00000000-0000-0000-91c4-0000000000A4" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A5" executionId="00000000-0000-0000-91c4-0000000000A5" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A6" executionId="00000000-0000-0000-91c4-0000000000A6" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A7" executionId="00000000-0000-0000-91c4-0000000000A7" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A8" executionId="00000000-0000-0000-91c4-0000000000A8" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000A9" executionId="00000000-0000-0000-91c4-0000000000A9" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="00000000-0000-0000-91c4-0000000000AA" executionId="00000000-0000-0000-91c4-0000000000AA" />
  </TestEntries>
  <Results>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunThisSpec" computerName="TeamBuildServer" duration="00:00:00.8450000" testId="00000000-0000-0000-91c4-000000000001" executionId="00000000-0000-0000-91c4-000000000001" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.4680000" testId="00000000-0000-0000-91c4-000000000002" executionId="00000000-0000-0000-91c4-000000000002" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
Cannot find directory "I:/Agent/PROD-Jason_Bourne/_work/5c0e0f53/CDO Team/spec/App.Db.Slacker/debug"

</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunThisSpec" computerName="TeamBuildServer" duration="00:00:01.0950000" testId="00000000-0000-0000-91c4-000000000003" executionId="00000000-0000-0000-91c4-000000000003" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.14501 seconds (files took 0.39404 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.14501 seconds (files took 0.39404 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.14501 seconds (files took 0.39404 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.14501 seconds (files took 0.39404 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.14501 seconds (files took 0.39404 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.14501 seconds (files took 0.39404 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.14501 seconds (files took 0.39404 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:30.3120000" testId="00000000-0000-0000-91c4-000000000004" executionId="00000000-0000-0000-91c4-000000000004" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..........................................................

Finished in 29.69 seconds (files took 0.34803 seconds to load)
58 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..........................................................

Finished in 29.69 seconds (files took 0.34803 seconds to load)
58 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..........................................................

Finished in 29.69 seconds (files took 0.34803 seconds to load)
58 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..........................................................

Finished in 29.69 seconds (files took 0.34803 seconds to load)
58 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..........................................................

Finished in 29.69 seconds (files took 0.34803 seconds to load)
58 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..........................................................

Finished in 29.69 seconds (files took 0.34803 seconds to load)
58 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..........................................................

Finished in 29.69 seconds (files took 0.34803 seconds to load)
58 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:06.8400000" testId="00000000-0000-0000-91c4-000000000005" executionId="00000000-0000-0000-91c4-000000000005" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...................

Finished in 6.23 seconds (files took 0.34803 seconds to load)
19 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...................

Finished in 6.23 seconds (files took 0.34803 seconds to load)
19 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...................

Finished in 6.23 seconds (files took 0.34803 seconds to load)
19 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...................

Finished in 6.23 seconds (files took 0.34803 seconds to load)
19 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...................

Finished in 6.23 seconds (files took 0.34803 seconds to load)
19 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...................

Finished in 6.23 seconds (files took 0.34803 seconds to load)
19 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...................

Finished in 6.23 seconds (files took 0.34803 seconds to load)
19 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:10.8660000" testId="00000000-0000-0000-91c4-000000000006" executionId="00000000-0000-0000-91c4-000000000006" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
............................

Finished in 10.26 seconds (files took 0.33703 seconds to load)
28 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
............................

Finished in 10.26 seconds (files took 0.33703 seconds to load)
28 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
............................

Finished in 10.26 seconds (files took 0.33703 seconds to load)
28 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
............................

Finished in 10.26 seconds (files took 0.33703 seconds to load)
28 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
............................

Finished in 10.26 seconds (files took 0.33703 seconds to load)
28 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
............................

Finished in 10.26 seconds (files took 0.33703 seconds to load)
28 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
............................

Finished in 10.26 seconds (files took 0.33703 seconds to load)
28 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.8020000" testId="00000000-0000-0000-91c4-000000000007" executionId="00000000-0000-0000-91c4-000000000007" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.16602 seconds (files took 0.35404 seconds to load)
3 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.16602 seconds (files took 0.35404 seconds to load)
3 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.16602 seconds (files took 0.35404 seconds to load)
3 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.16602 seconds (files took 0.35404 seconds to load)
3 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.16602 seconds (files took 0.35404 seconds to load)
3 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.16602 seconds (files took 0.35404 seconds to load)
3 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.16602 seconds (files took 0.35404 seconds to load)
3 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.7250000" testId="00000000-0000-0000-91c4-000000000008" executionId="00000000-0000-0000-91c4-000000000008" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.37904 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.37904 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.37904 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.37904 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.37904 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.37904 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.37904 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.7850000" testId="00000000-0000-0000-91c4-000000000009" executionId="00000000-0000-0000-91c4-000000000009" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.18202 seconds (files took 0.33403 seconds to load)
2 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.18202 seconds (files took 0.33403 seconds to load)
2 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.18202 seconds (files took 0.33403 seconds to load)
2 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.18202 seconds (files took 0.33403 seconds to load)
2 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.18202 seconds (files took 0.33403 seconds to load)
2 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.18202 seconds (files took 0.33403 seconds to load)
2 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.18202 seconds (files took 0.33403 seconds to load)
2 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.7710000" testId="00000000-0000-0000-91c4-00000000000A" executionId="00000000-0000-0000-91c4-00000000000A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.17802 seconds (files took 0.32903 seconds to load)
3 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.17802 seconds (files took 0.32903 seconds to load)
3 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.17802 seconds (files took 0.32903 seconds to load)
3 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.17802 seconds (files took 0.32903 seconds to load)
3 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.17802 seconds (files took 0.32903 seconds to load)
3 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.17802 seconds (files took 0.32903 seconds to load)
3 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.17802 seconds (files took 0.32903 seconds to load)
3 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:01.5160000" testId="00000000-0000-0000-91c4-00000000000B" executionId="00000000-0000-0000-91c4-00000000000B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........................

Finished in 0.93109 seconds (files took 0.32403 seconds to load)
24 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........................

Finished in 0.93109 seconds (files took 0.32403 seconds to load)
24 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........................

Finished in 0.93109 seconds (files took 0.32403 seconds to load)
24 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........................

Finished in 0.93109 seconds (files took 0.32403 seconds to load)
24 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........................

Finished in 0.93109 seconds (files took 0.32403 seconds to load)
24 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........................

Finished in 0.93109 seconds (files took 0.32403 seconds to load)
24 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........................

Finished in 0.93109 seconds (files took 0.32403 seconds to load)
24 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6630000" testId="00000000-0000-0000-91c4-00000000000C" executionId="00000000-0000-0000-91c4-00000000000C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.33303 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.33303 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.33303 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.33303 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.33303 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.33303 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.33303 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.7600000" testId="00000000-0000-0000-91c4-00000000000D" executionId="00000000-0000-0000-91c4-00000000000D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.15802 seconds (files took 0.33403 seconds to load)
3 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.15802 seconds (files took 0.33403 seconds to load)
3 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.15802 seconds (files took 0.33403 seconds to load)
3 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.15802 seconds (files took 0.33403 seconds to load)
3 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.15802 seconds (files took 0.33403 seconds to load)
3 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.15802 seconds (files took 0.33403 seconds to load)
3 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.15802 seconds (files took 0.33403 seconds to load)
3 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6810000" testId="00000000-0000-0000-91c4-00000000000E" executionId="00000000-0000-0000-91c4-00000000000E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.08101 seconds (files took 0.32903 seconds to load)
2 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.08101 seconds (files took 0.32903 seconds to load)
2 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.08101 seconds (files took 0.32903 seconds to load)
2 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.08101 seconds (files took 0.32903 seconds to load)
2 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.08101 seconds (files took 0.32903 seconds to load)
2 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.08101 seconds (files took 0.32903 seconds to load)
2 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.08101 seconds (files took 0.32903 seconds to load)
2 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:01.3950000" testId="00000000-0000-0000-91c4-00000000000F" executionId="00000000-0000-0000-91c4-00000000000F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.79508 seconds (files took 0.31703 seconds to load)
3 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.79508 seconds (files took 0.31703 seconds to load)
3 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.79508 seconds (files took 0.31703 seconds to load)
3 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.79508 seconds (files took 0.31703 seconds to load)
3 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.79508 seconds (files took 0.31703 seconds to load)
3 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.79508 seconds (files took 0.31703 seconds to load)
3 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.79508 seconds (files took 0.31703 seconds to load)
3 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.8180000" testId="00000000-0000-0000-91c4-000000000010" executionId="00000000-0000-0000-91c4-000000000010" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.20702 seconds (files took 0.34603 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.20702 seconds (files took 0.34603 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.20702 seconds (files took 0.34603 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.20702 seconds (files took 0.34603 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.20702 seconds (files took 0.34603 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.20702 seconds (files took 0.34603 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.20702 seconds (files took 0.34603 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.9640000" testId="00000000-0000-0000-91c4-000000000011" executionId="00000000-0000-0000-91c4-000000000011" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.33403 seconds (files took 0.34003 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.33403 seconds (files took 0.34003 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.33403 seconds (files took 0.34003 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.33403 seconds (files took 0.34003 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.33403 seconds (files took 0.34003 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.33403 seconds (files took 0.34003 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.33403 seconds (files took 0.34003 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:01.1750000" testId="00000000-0000-0000-91c4-000000000012" executionId="00000000-0000-0000-91c4-000000000012" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.57506 seconds (files took 0.33303 seconds to load)
4 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.57506 seconds (files took 0.33303 seconds to load)
4 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.57506 seconds (files took 0.33303 seconds to load)
4 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.57506 seconds (files took 0.33303 seconds to load)
4 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.57506 seconds (files took 0.33303 seconds to load)
4 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.57506 seconds (files took 0.33303 seconds to load)
4 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.57506 seconds (files took 0.33303 seconds to load)
4 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6660000" testId="00000000-0000-0000-91c4-000000000013" executionId="00000000-0000-0000-91c4-000000000013" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06101 seconds (files took 0.33503 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06101 seconds (files took 0.33503 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06101 seconds (files took 0.33503 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06101 seconds (files took 0.33503 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06101 seconds (files took 0.33503 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06101 seconds (files took 0.33503 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06101 seconds (files took 0.33503 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6330000" testId="00000000-0000-0000-91c4-000000000014" executionId="00000000-0000-0000-91c4-000000000014" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05201 seconds (files took 0.32503 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05201 seconds (files took 0.32503 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05201 seconds (files took 0.32503 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05201 seconds (files took 0.32503 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05201 seconds (files took 0.32503 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05201 seconds (files took 0.32503 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05201 seconds (files took 0.32503 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6700000" testId="00000000-0000-0000-91c4-000000000015" executionId="00000000-0000-0000-91c4-000000000015" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06901 seconds (files took 0.33203 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06901 seconds (files took 0.33203 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06901 seconds (files took 0.33203 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06901 seconds (files took 0.33203 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06901 seconds (files took 0.33203 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06901 seconds (files took 0.33203 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.06901 seconds (files took 0.33203 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.8580000" testId="00000000-0000-0000-91c4-000000000016" executionId="00000000-0000-0000-91c4-000000000016" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.26803 seconds (files took 0.31503 seconds to load)
4 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.26803 seconds (files took 0.31503 seconds to load)
4 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.26803 seconds (files took 0.31503 seconds to load)
4 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.26803 seconds (files took 0.31503 seconds to load)
4 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.26803 seconds (files took 0.31503 seconds to load)
4 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.26803 seconds (files took 0.31503 seconds to load)
4 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.26803 seconds (files took 0.31503 seconds to load)
4 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6220000" testId="00000000-0000-0000-91c4-000000000017" executionId="00000000-0000-0000-91c4-000000000017" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.033 seconds (files took 0.33103 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.033 seconds (files took 0.33103 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.033 seconds (files took 0.33103 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.033 seconds (files took 0.33103 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.033 seconds (files took 0.33103 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.033 seconds (files took 0.33103 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.033 seconds (files took 0.33103 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6080000" testId="00000000-0000-0000-91c4-000000000018" executionId="00000000-0000-0000-91c4-000000000018" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.031 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6820000" testId="00000000-0000-0000-91c4-000000000019" executionId="00000000-0000-0000-91c4-000000000019" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.09301 seconds (files took 0.32703 seconds to load)
3 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.09301 seconds (files took 0.32703 seconds to load)
3 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.09301 seconds (files took 0.32703 seconds to load)
3 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.09301 seconds (files took 0.32703 seconds to load)
3 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.09301 seconds (files took 0.32703 seconds to load)
3 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.09301 seconds (files took 0.32703 seconds to load)
3 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
...

Finished in 0.09301 seconds (files took 0.32703 seconds to load)
3 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.7520000" testId="00000000-0000-0000-91c4-00000000001A" executionId="00000000-0000-0000-91c4-00000000001A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.15302 seconds (files took 0.32603 seconds to load)
5 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.15302 seconds (files took 0.32603 seconds to load)
5 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.15302 seconds (files took 0.32603 seconds to load)
5 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.15302 seconds (files took 0.32603 seconds to load)
5 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.15302 seconds (files took 0.32603 seconds to load)
5 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.15302 seconds (files took 0.32603 seconds to load)
5 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.15302 seconds (files took 0.32603 seconds to load)
5 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.8090000" testId="00000000-0000-0000-91c4-00000000001B" executionId="00000000-0000-0000-91c4-00000000001B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.16402 seconds (files took 0.33903 seconds to load)
5 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.16402 seconds (files took 0.33903 seconds to load)
5 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.16402 seconds (files took 0.33903 seconds to load)
5 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.16402 seconds (files took 0.33903 seconds to load)
5 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.16402 seconds (files took 0.33903 seconds to load)
5 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.16402 seconds (files took 0.33903 seconds to load)
5 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.....

Finished in 0.16402 seconds (files took 0.33903 seconds to load)
5 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:02.0990000" testId="00000000-0000-0000-91c4-00000000001C" executionId="00000000-0000-0000-91c4-00000000001C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........

Finished in 1.25 seconds (files took 0.43104 seconds to load)
8 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........

Finished in 1.25 seconds (files took 0.43104 seconds to load)
8 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........

Finished in 1.25 seconds (files took 0.43104 seconds to load)
8 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........

Finished in 1.25 seconds (files took 0.43104 seconds to load)
8 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........

Finished in 1.25 seconds (files took 0.43104 seconds to load)
8 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........

Finished in 1.25 seconds (files took 0.43104 seconds to load)
8 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
........

Finished in 1.25 seconds (files took 0.43104 seconds to load)
8 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.9360000" testId="00000000-0000-0000-91c4-00000000001D" executionId="00000000-0000-0000-91c4-00000000001D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.31803 seconds (files took 0.33803 seconds to load)
2 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.31803 seconds (files took 0.33803 seconds to load)
2 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.31803 seconds (files took 0.33803 seconds to load)
2 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.31803 seconds (files took 0.33803 seconds to load)
2 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.31803 seconds (files took 0.33803 seconds to load)
2 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.31803 seconds (files took 0.33803 seconds to load)
2 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
..

Finished in 0.31803 seconds (files took 0.33803 seconds to load)
2 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6770000" testId="00000000-0000-0000-91c4-00000000001E" executionId="00000000-0000-0000-91c4-00000000001E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.08201 seconds (files took 0.33003 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.08201 seconds (files took 0.33003 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.08201 seconds (files took 0.33003 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.08201 seconds (files took 0.33003 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.08201 seconds (files took 0.33003 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.08201 seconds (files took 0.33003 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.08201 seconds (files took 0.33003 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6630000" testId="00000000-0000-0000-91c4-00000000001F" executionId="00000000-0000-0000-91c4-00000000001F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.34103 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.34103 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.34103 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.34103 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.34103 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.34103 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05101 seconds (files took 0.34103 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.8240000" testId="00000000-0000-0000-91c4-000000000020" executionId="00000000-0000-0000-91c4-000000000020" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.23302 seconds (files took 0.32103 seconds to load)
4 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.23302 seconds (files took 0.32103 seconds to load)
4 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.23302 seconds (files took 0.32103 seconds to load)
4 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.23302 seconds (files took 0.32103 seconds to load)
4 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.23302 seconds (files took 0.32103 seconds to load)
4 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.23302 seconds (files took 0.32103 seconds to load)
4 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
....

Finished in 0.23302 seconds (files took 0.32103 seconds to load)
4 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:00.6450000" testId="00000000-0000-0000-91c4-000000000021" executionId="00000000-0000-0000-91c4-000000000021" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05801 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05801 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05801 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05801 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05801 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05801 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.

Finished in 0.05801 seconds (files took 0.32103 seconds to load)
1 example, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RunSpecs" computerName="TeamBuildServer" duration="00:00:01.7670000" testId="00000000-0000-0000-91c4-000000000022" executionId="00000000-0000-0000-91c4-000000000022" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.........

Finished in 1.18 seconds (files took 0.32503 seconds to load)
9 examples, 0 failures


</DebugTrace>
        <StdOut>
                            StdOut
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.........

Finished in 1.18 seconds (files took 0.32503 seconds to load)
9 examples, 0 failures


</StdOut>
        <StdErr>
                            StdErr
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.........

Finished in 1.18 seconds (files took 0.32503 seconds to load)
9 examples, 0 failures


</StdErr>
        <TextMessages>
                            TextMsg
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.........

Finished in 1.18 seconds (files took 0.32503 seconds to load)
9 examples, 0 failures


</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.........

Finished in 1.18 seconds (files took 0.32503 seconds to load)
9 examples, 0 failures


</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.........

Finished in 1.18 seconds (files took 0.32503 seconds to load)
9 examples, 0 failures


</ErrorInfo>
        <Exception>
                            Exception
                            Standard Error: 
Standard Output: Running Slacker ....

testoutput.txt:
Beachcomber (local_dev)
.........

Finished in 1.18 seconds (files took 0.32503 seconds to load)
9 examples, 0 failures


</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.6060000" testId="00000000-0000-0000-91c4-000000000023" executionId="00000000-0000-0000-91c4-000000000023" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0000000" testId="00000000-0000-0000-91c4-000000000024" executionId="00000000-0000-0000-91c4-000000000024" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0010000" testId="00000000-0000-0000-91c4-000000000025" executionId="00000000-0000-0000-91c4-000000000025" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0010000" testId="00000000-0000-0000-91c4-000000000026" executionId="00000000-0000-0000-91c4-000000000026" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0010000" testId="00000000-0000-0000-91c4-000000000027" executionId="00000000-0000-0000-91c4-000000000027" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0010000" testId="00000000-0000-0000-91c4-000000000028" executionId="00000000-0000-0000-91c4-000000000028" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0000000" testId="00000000-0000-0000-91c4-000000000029" executionId="00000000-0000-0000-91c4-000000000029" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0300000" testId="00000000-0000-0000-91c4-00000000002A" executionId="00000000-0000-0000-91c4-00000000002A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0090000" testId="00000000-0000-0000-91c4-00000000002B" executionId="00000000-0000-0000-91c4-00000000002B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0010000" testId="00000000-0000-0000-91c4-00000000002C" executionId="00000000-0000-0000-91c4-00000000002C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateTest" computerName="TeamBuildServer" duration="00:00:00.0410000" testId="00000000-0000-0000-91c4-00000000002D" executionId="00000000-0000-0000-91c4-00000000002D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateTest" computerName="TeamBuildServer" duration="00:00:00.0030000" testId="00000000-0000-0000-91c4-00000000002E" executionId="00000000-0000-0000-91c4-00000000002E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateTest" computerName="TeamBuildServer" duration="00:00:00.0020000" testId="00000000-0000-0000-91c4-00000000002F" executionId="00000000-0000-0000-91c4-00000000002F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateTest" computerName="TeamBuildServer" duration="00:00:00.0020000" testId="00000000-0000-0000-91c4-000000000030" executionId="00000000-0000-0000-91c4-000000000030" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateTest" computerName="TeamBuildServer" duration="00:00:00.0030000" testId="00000000-0000-0000-91c4-000000000031" executionId="00000000-0000-0000-91c4-000000000031" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateTest" computerName="TeamBuildServer" duration="00:00:00.0010000" testId="00000000-0000-0000-91c4-000000000032" executionId="00000000-0000-0000-91c4-000000000032" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateTest" computerName="TeamBuildServer" duration="00:00:00.0030000" testId="00000000-0000-0000-91c4-000000000033" executionId="00000000-0000-0000-91c4-000000000033" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DateTest" computerName="TeamBuildServer" duration="00:00:05.8120000" testId="00000000-0000-0000-91c4-000000000034" executionId="00000000-0000-0000-91c4-000000000034" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="NumberIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0140000" testId="00000000-0000-0000-91c4-000000000035" executionId="00000000-0000-0000-91c4-000000000035" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="NumberIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0000000" testId="00000000-0000-0000-91c4-000000000036" executionId="00000000-0000-0000-91c4-000000000036" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="NumberIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0010000" testId="00000000-0000-0000-91c4-000000000037" executionId="00000000-0000-0000-91c4-000000000037" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="NumberIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0000000" testId="00000000-0000-0000-91c4-000000000038" executionId="00000000-0000-0000-91c4-000000000038" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="NumberIsInvalidClientFormatTest" computerName="TeamBuildServer" duration="00:00:00.0000000" testId="00000000-0000-0000-91c4-000000000039" executionId="00000000-0000-0000-91c4-000000000039" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="RegexReplaceTest" computerName="TeamBuildServer" duration="00:00:00.0040000" testId="00000000-0000-0000-91c4-00000000003A" executionId="00000000-0000-0000-91c4-00000000003A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="PollSpec" computerName="TeamBuildServer" duration="00:00:02.8130000" testId="00000000-0000-0000-91c4-00000000003B" executionId="00000000-0000-0000-91c4-00000000003B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Retrieved configuration settings
</DebugTrace>
        <StdOut>
                            StdOut
                            Retrieved configuration settings
</StdOut>
        <StdErr>
                            StdErr
                            Retrieved configuration settings
</StdErr>
        <TextMessages>
                            TextMsg
                            Retrieved configuration settings
</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Retrieved configuration settings
</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Retrieved configuration settings
</ErrorInfo>
        <Exception>
                            Exception
                            Retrieved configuration settings
</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="TemplateSpecAll" computerName="TeamBuildServer" duration="00:00:00.0550000" testId="00000000-0000-0000-91c4-00000000003C" executionId="00000000-0000-0000-91c4-00000000003C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="BrokerQueueClientTest" computerName="TeamBuildServer" duration="00:00:00.2810000" testId="00000000-0000-0000-91c4-00000000003D" executionId="00000000-0000-0000-91c4-00000000003D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="BrokerQueueClientTest" computerName="TeamBuildServer" duration="00:00:00.0440000" testId="00000000-0000-0000-91c4-00000000003E" executionId="00000000-0000-0000-91c4-00000000003E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DetailsTagTest" computerName="TeamBuildServer" duration="00:00:00.0060000" testId="00000000-0000-0000-91c4-00000000003F" executionId="00000000-0000-0000-91c4-00000000003F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DetailsTagTest" computerName="TeamBuildServer" duration="00:00:00.0370000" testId="00000000-0000-0000-91c4-000000000040" executionId="00000000-0000-0000-91c4-000000000040" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DbModelProcessing" computerName="TeamBuildServer" duration="00:00:00.8630000" testId="00000000-0000-0000-91c4-000000000041" executionId="00000000-0000-0000-91c4-000000000041" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DbModelProcessing" computerName="TeamBuildServer" duration="00:00:00.2080000" testId="00000000-0000-0000-91c4-000000000042" executionId="00000000-0000-0000-91c4-000000000042" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DbModelProcessing" computerName="TeamBuildServer" duration="00:00:00.0140000" testId="00000000-0000-0000-91c4-000000000043" executionId="00000000-0000-0000-91c4-000000000043" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DbModelProcessing" computerName="TeamBuildServer" duration="00:00:00.0700000" testId="00000000-0000-0000-91c4-000000000044" executionId="00000000-0000-0000-91c4-000000000044" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DetailsTagTest" computerName="TeamBuildServer" duration="00:00:00.0350000" testId="00000000-0000-0000-91c4-000000000045" executionId="00000000-0000-0000-91c4-000000000045" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DetailsTagTest" computerName="TeamBuildServer" duration="00:00:00.0030000" testId="00000000-0000-0000-91c4-000000000046" executionId="00000000-0000-0000-91c4-000000000046" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DetailsTagTest" computerName="TeamBuildServer" duration="00:00:00.0180000" testId="00000000-0000-0000-91c4-000000000047" executionId="00000000-0000-0000-91c4-000000000047" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DetailsTagTest" computerName="TeamBuildServer" duration="00:00:00.0070000" testId="00000000-0000-0000-91c4-000000000048" executionId="00000000-0000-0000-91c4-000000000048" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DetailsTagTest" computerName="TeamBuildServer" duration="00:00:00.0200000" testId="00000000-0000-0000-91c4-000000000049" executionId="00000000-0000-0000-91c4-000000000049" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:01.1590000" testId="00000000-0000-0000-91c4-00000000004A" executionId="00000000-0000-0000-91c4-00000000004A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.0030000" testId="00000000-0000-0000-91c4-00000000004B" executionId="00000000-0000-0000-91c4-00000000004B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.1670000" testId="00000000-0000-0000-91c4-00000000004C" executionId="00000000-0000-0000-91c4-00000000004C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.3490000" testId="00000000-0000-0000-91c4-00000000004D" executionId="00000000-0000-0000-91c4-00000000004D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.0660000" testId="00000000-0000-0000-91c4-00000000004E" executionId="00000000-0000-0000-91c4-00000000004E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.0910000" testId="00000000-0000-0000-91c4-00000000004F" executionId="00000000-0000-0000-91c4-00000000004F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.0700000" testId="00000000-0000-0000-91c4-000000000050" executionId="00000000-0000-0000-91c4-000000000050" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.0660000" testId="00000000-0000-0000-91c4-000000000051" executionId="00000000-0000-0000-91c4-000000000051" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.1660000" testId="00000000-0000-0000-91c4-000000000052" executionId="00000000-0000-0000-91c4-000000000052" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.0880000" testId="00000000-0000-0000-91c4-000000000053" executionId="00000000-0000-0000-91c4-000000000053" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.1170000" testId="00000000-0000-0000-91c4-000000000054" executionId="00000000-0000-0000-91c4-000000000054" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.0970000" testId="00000000-0000-0000-91c4-000000000055" executionId="00000000-0000-0000-91c4-000000000055" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExcelExportSpecAll" computerName="TeamBuildServer" duration="00:00:00.1240000" testId="00000000-0000-0000-91c4-000000000056" executionId="00000000-0000-0000-91c4-000000000056" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExecutionSurfaceSpecAll" computerName="TeamBuildServer" duration="00:00:00.5100000" testId="00000000-0000-0000-91c4-000000000057" executionId="00000000-0000-0000-91c4-000000000057" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExecutionSurfaceSpecAll" computerName="TeamBuildServer" duration="00:00:00.4240000" testId="00000000-0000-0000-91c4-000000000058" executionId="00000000-0000-0000-91c4-000000000058" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ExecutionSurfaceSpecAll" computerName="TeamBuildServer" duration="00:00:00.3510000" testId="00000000-0000-0000-91c4-000000000059" executionId="00000000-0000-0000-91c4-000000000059" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="XmlToFlexSpecArrays" computerName="TeamBuildServer" duration="00:00:00.0590000" testId="00000000-0000-0000-91c4-00000000005A" executionId="00000000-0000-0000-91c4-00000000005A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ToObjectSpec" computerName="TeamBuildServer" duration="00:00:00.0090000" testId="00000000-0000-0000-91c4-00000000005B" executionId="00000000-0000-0000-91c4-00000000005B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ToObjectSpec" computerName="TeamBuildServer" duration="00:00:00.0000000" testId="00000000-0000-0000-91c4-00000000005C" executionId="00000000-0000-0000-91c4-00000000005C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ToObjectSpec" computerName="TeamBuildServer" duration="00:00:00.0000000" testId="00000000-0000-0000-91c4-00000000005D" executionId="00000000-0000-0000-91c4-00000000005D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="FlexToXmlSpec" computerName="TeamBuildServer" duration="00:00:00.0040000" testId="00000000-0000-0000-91c4-00000000005E" executionId="00000000-0000-0000-91c4-00000000005E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="XmlToFlexSpec" computerName="TeamBuildServer" duration="00:00:00.0380000" testId="00000000-0000-0000-91c4-00000000005F" executionId="00000000-0000-0000-91c4-00000000005F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ForEachSpec" computerName="TeamBuildServer" duration="00:00:00.0040000" testId="00000000-0000-0000-91c4-000000000060" executionId="00000000-0000-0000-91c4-000000000060" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="UnderscoreSpec" computerName="TeamBuildServer" duration="00:00:00.0180000" testId="00000000-0000-0000-91c4-000000000061" executionId="00000000-0000-0000-91c4-000000000061" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="UnderscoreSpec" computerName="TeamBuildServer" duration="00:00:00.0190000" testId="00000000-0000-0000-91c4-000000000062" executionId="00000000-0000-0000-91c4-000000000062" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="MetaJsonSpec" computerName="TeamBuildServer" duration="00:00:00.0280000" testId="00000000-0000-0000-91c4-000000000063" executionId="00000000-0000-0000-91c4-000000000063" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="UnderscoreSpec" computerName="TeamBuildServer" duration="00:00:00.0000000" testId="00000000-0000-0000-91c4-000000000064" executionId="00000000-0000-0000-91c4-000000000064" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="AnonymousObjectToJsonSpec" computerName="TeamBuildServer" duration="00:00:00.0060000" testId="00000000-0000-0000-91c4-000000000065" executionId="00000000-0000-0000-91c4-000000000065" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="FlexToJsonSpec" computerName="TeamBuildServer" duration="00:00:00.0100000" testId="00000000-0000-0000-91c4-000000000066" executionId="00000000-0000-0000-91c4-000000000066" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="JsonToObject" computerName="TeamBuildServer" duration="00:00:00.0080000" testId="00000000-0000-0000-91c4-000000000067" executionId="00000000-0000-0000-91c4-000000000067" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0140000" testId="00000000-0000-0000-91c4-000000000068" executionId="00000000-0000-0000-91c4-000000000068" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0120000" testId="00000000-0000-0000-91c4-000000000069" executionId="00000000-0000-0000-91c4-000000000069" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0110000" testId="00000000-0000-0000-91c4-00000000006A" executionId="00000000-0000-0000-91c4-00000000006A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0190000" testId="00000000-0000-0000-91c4-00000000006B" executionId="00000000-0000-0000-91c4-00000000006B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0100000" testId="00000000-0000-0000-91c4-00000000006C" executionId="00000000-0000-0000-91c4-00000000006C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0630000" testId="00000000-0000-0000-91c4-00000000006D" executionId="00000000-0000-0000-91c4-00000000006D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0080000" testId="00000000-0000-0000-91c4-00000000006E" executionId="00000000-0000-0000-91c4-00000000006E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.1550000" testId="00000000-0000-0000-91c4-00000000006F" executionId="00000000-0000-0000-91c4-00000000006F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0120000" testId="00000000-0000-0000-91c4-000000000070" executionId="00000000-0000-0000-91c4-000000000070" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0220000" testId="00000000-0000-0000-91c4-000000000071" executionId="00000000-0000-0000-91c4-000000000071" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0090000" testId="00000000-0000-0000-91c4-000000000072" executionId="00000000-0000-0000-91c4-000000000072" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0690000" testId="00000000-0000-0000-91c4-000000000073" executionId="00000000-0000-0000-91c4-000000000073" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0320000" testId="00000000-0000-0000-91c4-000000000074" executionId="00000000-0000-0000-91c4-000000000074" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0090000" testId="00000000-0000-0000-91c4-000000000075" executionId="00000000-0000-0000-91c4-000000000075" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0080000" testId="00000000-0000-0000-91c4-000000000076" executionId="00000000-0000-0000-91c4-000000000076" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0070000" testId="00000000-0000-0000-91c4-000000000077" executionId="00000000-0000-0000-91c4-000000000077" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0070000" testId="00000000-0000-0000-91c4-000000000078" executionId="00000000-0000-0000-91c4-000000000078" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0150000" testId="00000000-0000-0000-91c4-000000000079" executionId="00000000-0000-0000-91c4-000000000079" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0070000" testId="00000000-0000-0000-91c4-00000000007A" executionId="00000000-0000-0000-91c4-00000000007A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0750000" testId="00000000-0000-0000-91c4-00000000007B" executionId="00000000-0000-0000-91c4-00000000007B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0440000" testId="00000000-0000-0000-91c4-00000000007C" executionId="00000000-0000-0000-91c4-00000000007C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0190000" testId="00000000-0000-0000-91c4-00000000007D" executionId="00000000-0000-0000-91c4-00000000007D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0170000" testId="00000000-0000-0000-91c4-00000000007E" executionId="00000000-0000-0000-91c4-00000000007E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0200000" testId="00000000-0000-0000-91c4-00000000007F" executionId="00000000-0000-0000-91c4-00000000007F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0210000" testId="00000000-0000-0000-91c4-000000000080" executionId="00000000-0000-0000-91c4-000000000080" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0190000" testId="00000000-0000-0000-91c4-000000000081" executionId="00000000-0000-0000-91c4-000000000081" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0180000" testId="00000000-0000-0000-91c4-000000000082" executionId="00000000-0000-0000-91c4-000000000082" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0240000" testId="00000000-0000-0000-91c4-000000000083" executionId="00000000-0000-0000-91c4-000000000083" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocSpecAll" computerName="TeamBuildServer" duration="00:00:00.0070000" testId="00000000-0000-0000-91c4-000000000084" executionId="00000000-0000-0000-91c4-000000000084" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ImportSpec" computerName="TeamBuildServer" duration="00:00:04.1930000" testId="00000000-0000-0000-91c4-000000000085" executionId="00000000-0000-0000-91c4-000000000085" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ImportSpec" computerName="TeamBuildServer" duration="00:00:00.1590000" testId="00000000-0000-0000-91c4-000000000086" executionId="00000000-0000-0000-91c4-000000000086" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ImportSpec" computerName="TeamBuildServer" duration="00:00:00.1490000" testId="00000000-0000-0000-91c4-000000000087" executionId="00000000-0000-0000-91c4-000000000087" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ImportSpec" computerName="TeamBuildServer" duration="00:00:00.0920000" testId="00000000-0000-0000-91c4-000000000088" executionId="00000000-0000-0000-91c4-000000000088" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ImportSpec" computerName="TeamBuildServer" duration="00:00:00.3310000" testId="00000000-0000-0000-91c4-000000000089" executionId="00000000-0000-0000-91c4-000000000089" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Retrieved Active Users
Retrieved Execution Surface
</DebugTrace>
        <StdOut>
                            StdOut
                            Retrieved Active Users
Retrieved Execution Surface
</StdOut>
        <StdErr>
                            StdErr
                            Retrieved Active Users
Retrieved Execution Surface
</StdErr>
        <TextMessages>
                            TextMsg
                            Retrieved Active Users
Retrieved Execution Surface
</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Retrieved Active Users
Retrieved Execution Surface
</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Retrieved Active Users
Retrieved Execution Surface
</ErrorInfo>
        <Exception>
                            Exception
                            Retrieved Active Users
Retrieved Execution Surface
</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="ImportSpec" computerName="TeamBuildServer" duration="00:00:00.1760000" testId="00000000-0000-0000-91c4-00000000008A" executionId="00000000-0000-0000-91c4-00000000008A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="DbCallSpec" computerName="TeamBuildServer" duration="00:00:00.0010000" testId="00000000-0000-0000-91c4-00000000008B" executionId="00000000-0000-0000-91c4-00000000008B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.6270000" testId="00000000-0000-0000-91c4-00000000008C" executionId="00000000-0000-0000-91c4-00000000008C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            Retrieved configuration settings
</DebugTrace>
        <StdOut>
                            StdOut
                            Retrieved configuration settings
</StdOut>
        <StdErr>
                            StdErr
                            Retrieved configuration settings
</StdErr>
        <TextMessages>
                            TextMsg
                            Retrieved configuration settings
</TextMessages>
        <TraceInfo>
                            TraceInfo
                            Retrieved configuration settings
</TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            Retrieved configuration settings
</ErrorInfo>
        <Exception>
                            Exception
                            Retrieved configuration settings
</Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0520000" testId="00000000-0000-0000-91c4-00000000008D" executionId="00000000-0000-0000-91c4-00000000008D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0330000" testId="00000000-0000-0000-91c4-00000000008E" executionId="00000000-0000-0000-91c4-00000000008E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0320000" testId="00000000-0000-0000-91c4-00000000008F" executionId="00000000-0000-0000-91c4-00000000008F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0370000" testId="00000000-0000-0000-91c4-000000000090" executionId="00000000-0000-0000-91c4-000000000090" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0340000" testId="00000000-0000-0000-91c4-000000000091" executionId="00000000-0000-0000-91c4-000000000091" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0350000" testId="00000000-0000-0000-91c4-000000000092" executionId="00000000-0000-0000-91c4-000000000092" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0330000" testId="00000000-0000-0000-91c4-000000000093" executionId="00000000-0000-0000-91c4-000000000093" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0340000" testId="00000000-0000-0000-91c4-000000000094" executionId="00000000-0000-0000-91c4-000000000094" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0310000" testId="00000000-0000-0000-91c4-000000000095" executionId="00000000-0000-0000-91c4-000000000095" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0320000" testId="00000000-0000-0000-91c4-000000000096" executionId="00000000-0000-0000-91c4-000000000096" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0300000" testId="00000000-0000-0000-91c4-000000000097" executionId="00000000-0000-0000-91c4-000000000097" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0370000" testId="00000000-0000-0000-91c4-000000000098" executionId="00000000-0000-0000-91c4-000000000098" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0360000" testId="00000000-0000-0000-91c4-000000000099" executionId="00000000-0000-0000-91c4-000000000099" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0350000" testId="00000000-0000-0000-91c4-00000000009A" executionId="00000000-0000-0000-91c4-00000000009A" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0320000" testId="00000000-0000-0000-91c4-00000000009B" executionId="00000000-0000-0000-91c4-00000000009B" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0340000" testId="00000000-0000-0000-91c4-00000000009C" executionId="00000000-0000-0000-91c4-00000000009C" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0320000" testId="00000000-0000-0000-91c4-00000000009D" executionId="00000000-0000-0000-91c4-00000000009D" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0310000" testId="00000000-0000-0000-91c4-00000000009E" executionId="00000000-0000-0000-91c4-00000000009E" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0320000" testId="00000000-0000-0000-91c4-00000000009F" executionId="00000000-0000-0000-91c4-00000000009F" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0350000" testId="00000000-0000-0000-91c4-0000000000A0" executionId="00000000-0000-0000-91c4-0000000000A0" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocFilteredGetSpec" computerName="TeamBuildServer" duration="00:00:00.0330000" testId="00000000-0000-0000-91c4-0000000000A1" executionId="00000000-0000-0000-91c4-0000000000A1" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocCallSpec" computerName="TeamBuildServer" duration="00:00:00.0300000" testId="00000000-0000-0000-91c4-0000000000A2" executionId="00000000-0000-0000-91c4-0000000000A2" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocCallSpec" computerName="TeamBuildServer" duration="00:00:00.0320000" testId="00000000-0000-0000-91c4-0000000000A3" executionId="00000000-0000-0000-91c4-0000000000A3" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocCallSpec" computerName="TeamBuildServer" duration="00:00:00.0390000" testId="00000000-0000-0000-91c4-0000000000A4" executionId="00000000-0000-0000-91c4-0000000000A4" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocCallSpec" computerName="TeamBuildServer" duration="00:00:00.0280000" testId="00000000-0000-0000-91c4-0000000000A5" executionId="00000000-0000-0000-91c4-0000000000A5" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocCallSpec" computerName="TeamBuildServer" duration="00:00:00.0370000" testId="00000000-0000-0000-91c4-0000000000A6" executionId="00000000-0000-0000-91c4-0000000000A6" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocCallSpec" computerName="TeamBuildServer" duration="00:00:00.0430000" testId="00000000-0000-0000-91c4-0000000000A7" executionId="00000000-0000-0000-91c4-0000000000A7" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocCallSpec" computerName="TeamBuildServer" duration="00:00:00.0540000" testId="00000000-0000-0000-91c4-0000000000A8" executionId="00000000-0000-0000-91c4-0000000000A8" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocCallSpec" computerName="TeamBuildServer" duration="00:00:00.1200000" testId="00000000-0000-0000-91c4-0000000000A9" executionId="00000000-0000-0000-91c4-0000000000A9" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
    <UnitTestResult testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" startTime="2016-03-14T12:54:57" endTime="2016-03-14T12:54:57" testName="SprocCallSpec" computerName="TeamBuildServer" duration="00:00:00.0890000" testId="00000000-0000-0000-91c4-0000000000AA" executionId="00000000-0000-0000-91c4-0000000000AA" outcome="Passed">
      <Output>
        <DebugTrace>
                            Debug Trace
                            </DebugTrace>
        <StdOut>
                            StdOut
                            </StdOut>
        <StdErr>
                            StdErr
                            </StdErr>
        <TextMessages>
                            TextMsg
                            </TextMessages>
        <TraceInfo>
                            TraceInfo
                            </TraceInfo>
        <ErrorInfo>
                            ErrorInfo
                            </ErrorInfo>
        <Exception>
                            Exception
                            </Exception>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>