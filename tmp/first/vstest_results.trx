<?xml version="1.0" encoding="utf-8"?>
<TestRun id="07E00309-1113-1600-91c4-30db1d215203" runUser="\" name="@ 2016-03-09 17:19:22" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Default Test Settings" id="8dfb34aa-91bc-45e3-8609-d0a4e732d982">
    <Deployment runDeploymentRoot="">
      <DeploymentItem filename="xUnit.net Tests" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents" />
    </Execution>
  </TestSettings>
  <Times creation="2016-03-09T17:19:22-06:00" queuing="2016-03-09T17:19:22-06:00" start="2016-03-09T17:19:22-06:00" finish="2016-03-09T17:19:22-06:00" />
  <ResultSummary outcome="Failed">
    <Counters error="0" timeout="0" aborted="0" passedButRunAborted="0" notRunnable="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" total="294" executed="294" notExecuted="0" passed="293" failed="1" inconclusive="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecificSpecTester.RunThisSpec" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000001">
      <Execution id="07E00309-1113-1600-91c4-000000000001" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecificSpecTester.RunThisSpec" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calculations/FractionOfAmount.function.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000002">
      <Execution id="07E00309-1113-1600-91c4-000000000002" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calculations/FractionOfAmount.function.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calculations/IsEqual.function.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000003">
      <Execution id="07E00309-1113-1600-91c4-000000000003" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calculations/IsEqual.function.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calendar_and_workflow/DateAddMonth.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000004">
      <Execution id="07E00309-1113-1600-91c4-000000000004" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calendar_and_workflow/DateAddMonth.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calendar_and_workflow/DateAddPeriod.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000005">
      <Execution id="07E00309-1113-1600-91c4-000000000005" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calendar_and_workflow/DateAddPeriod.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calendar_and_workflow/SetDayOfMonth.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000006">
      <Execution id="07E00309-1113-1600-91c4-000000000006" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calendar_and_workflow/SetDayOfMonth.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_ConvertToTableValue.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000007">
      <Execution id="07E00309-1113-1600-91c4-000000000007" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_ConvertToTableValue.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_DisplayValueParse.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000008">
      <Execution id="07E00309-1113-1600-91c4-000000000008" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_DisplayValueParse.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyDesc.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000009">
      <Execution id="07E00309-1113-1600-91c4-000000000009" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyDesc.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyModelFieldBaseType.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000000A">
      <Execution id="07E00309-1113-1600-91c4-00000000000A" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyModelFieldBaseType.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyValueDesc.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000000B">
      <Execution id="07E00309-1113-1600-91c4-00000000000B" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyValueDesc.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyValueIsExpression.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000000C">
      <Execution id="07E00309-1113-1600-91c4-00000000000C" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyValueIsExpression.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/event/EventApplicationIdsToXML.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000000D">
      <Execution id="07E00309-1113-1600-91c4-00000000000D" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/event/EventApplicationIdsToXML.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/event/EventId.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000000E">
      <Execution id="07E00309-1113-1600-91c4-00000000000E" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/event/EventId.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/calculation_model/CM_Set_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000000F">
      <Execution id="07E00309-1113-1600-91c4-00000000000F" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/calculation_model/CM_Set_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/calculation_model/CM_Set_Model_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000010">
      <Execution id="07E00309-1113-1600-91c4-000000000010" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/calculation_model/CM_Set_Model_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_Area_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000011">
      <Execution id="07E00309-1113-1600-91c4-000000000011" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_Area_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_del.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000012">
      <Execution id="07E00309-1113-1600-91c4-000000000012" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_del.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000013">
      <Execution id="07E00309-1113-1600-91c4-000000000013" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_put.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000014">
      <Execution id="07E00309-1113-1600-91c4-000000000014" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_put.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_Value_calculate.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000015">
      <Execution id="07E00309-1113-1600-91c4-000000000015" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_Value_calculate.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_Value_put.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000016">
      <Execution id="07E00309-1113-1600-91c4-000000000016" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_Value_put.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_Log_put.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000017">
      <Execution id="07E00309-1113-1600-91c4-000000000017" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_Log_put.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_put.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000018">
      <Execution id="07E00309-1113-1600-91c4-000000000018" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_put.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_System_Message_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000019">
      <Execution id="07E00309-1113-1600-91c4-000000000019" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_System_Message_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_User_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000001A">
      <Execution id="07E00309-1113-1600-91c4-00000000001A" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_User_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/financial_instrument/FI_Forecast_Result_Flat_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000001B">
      <Execution id="07E00309-1113-1600-91c4-00000000001B" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/financial_instrument/FI_Forecast_Result_Flat_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/financial_instrument/FI_Property_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000001C">
      <Execution id="07E00309-1113-1600-91c4-00000000001C" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/financial_instrument/FI_Property_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/financial_instrument/FI_Property_Value_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000001D">
      <Execution id="07E00309-1113-1600-91c4-00000000001D" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/financial_instrument/FI_Property_Value_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/forecast_entity/FE_Entity_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000001E">
      <Execution id="07E00309-1113-1600-91c4-00000000001E" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/forecast_entity/FE_Entity_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/forecast_scenario/FS_Scenario_run.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000001F">
      <Execution id="07E00309-1113-1600-91c4-00000000001F" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/forecast_scenario/FS_Scenario_run.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/transformation_matrix/TM_Characteristic_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000020">
      <Execution id="07E00309-1113-1600-91c4-000000000020" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/transformation_matrix/TM_Characteristic_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/transformation_matrix/TM_Criterion_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000021">
      <Execution id="07E00309-1113-1600-91c4-000000000021" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/transformation_matrix/TM_Criterion_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/transformation_matrix/TM_Schedule_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000022">
      <Execution id="07E00309-1113-1600-91c4-000000000022" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/transformation_matrix/TM_Schedule_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_functions/data_dictionary/tf_DD_Object_Data_Check.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000023">
      <Execution id="07E00309-1113-1600-91c4-000000000023" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_functions/data_dictionary/tf_DD_Object_Data_Check.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_functions/data_dictionary/tf_DD_Property.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000024">
      <Execution id="07E00309-1113-1600-91c4-000000000024" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_functions/data_dictionary/tf_DD_Property.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_triggers/trg_Config_Value_put.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000025">
      <Execution id="07E00309-1113-1600-91c4-000000000025" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_triggers/trg_Config_Value_put.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_triggers/trg_DD_Property.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000026">
      <Execution id="07E00309-1113-1600-91c4-000000000026" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_triggers/trg_DD_Property.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app_clr/stored_procedures/Result_Sets_Schema_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000027">
      <Execution id="07E00309-1113-1600-91c4-000000000027" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app_clr/stored_procedures/Result_Sets_Schema_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(etl/stored_procedures/DL_Package_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000028">
      <Execution id="07E00309-1113-1600-91c4-000000000028" />
      <TestMethod adapterTypeName="xUnit" name="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(etl/stored_procedures/DL_Package_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of LookupScheduleSpec, LoadScheduleFromXml works correctly" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000029">
      <Execution id="07E00309-1113-1600-91c4-000000000029" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of LookupScheduleSpec, LoadScheduleFromXml works correctly" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of UtilityMethodsSpec, MoreMath Max methods works correctly" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000002A">
      <Execution id="07E00309-1113-1600-91c4-00000000002A" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of UtilityMethodsSpec, MoreMath Max methods works correctly" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of UtilityMethodsSpec, MoreMath Min methods works correctly" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000002B">
      <Execution id="07E00309-1113-1600-91c4-00000000002B" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of UtilityMethodsSpec, MoreMath Min methods works correctly" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of UtilityMethodsSpec, ClosestBinarySearch method works correctly" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000002C">
      <Execution id="07E00309-1113-1600-91c4-00000000002C" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of UtilityMethodsSpec, ClosestBinarySearch method works correctly" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of LoadXmlDocumentFromXmlString, LoadXmlDocumentFromXmlString works correctly for Case: Valid XML String" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000002D">
      <Execution id="07E00309-1113-1600-91c4-00000000002D" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of LoadXmlDocumentFromXmlString, LoadXmlDocumentFromXmlString works correctly for Case: Valid XML String" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of LoadXmlDocumentFromXmlString, LoadXmlDocumentFromXmlString works correctly for Case: Malformed XML" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000002E">
      <Execution id="07E00309-1113-1600-91c4-00000000002E" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of LoadXmlDocumentFromXmlString, LoadXmlDocumentFromXmlString works correctly for Case: Malformed XML" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a PMT result, PMT works correctly for Using BeginningOfPeriod" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000002F">
      <Execution id="07E00309-1113-1600-91c4-00000000002F" />
      <TestMethod adapterTypeName="xUnit" name="Given a PMT result, PMT works correctly for Using BeginningOfPeriod" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a PMT result, PMT works correctly for Using EndOfPeriod" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000030">
      <Execution id="07E00309-1113-1600-91c4-000000000030" />
      <TestMethod adapterTypeName="xUnit" name="Given a PMT result, PMT works correctly for Using EndOfPeriod" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a PMT result, PMT works correctly for Using future value with BeginningOfPeriod" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000031">
      <Execution id="07E00309-1113-1600-91c4-000000000031" />
      <TestMethod adapterTypeName="xUnit" name="Given a PMT result, PMT works correctly for Using future value with BeginningOfPeriod" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a PMT result, PMT works correctly for Using future value with EndOfPeriod" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000032">
      <Execution id="07E00309-1113-1600-91c4-000000000032" />
      <TestMethod adapterTypeName="xUnit" name="Given a PMT result, PMT works correctly for Using future value with EndOfPeriod" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an SingleMonthMortality result, SingleMonthMortality works correctly for Case 1" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000033">
      <Execution id="07E00309-1113-1600-91c4-000000000033" />
      <TestMethod adapterTypeName="xUnit" name="Given an SingleMonthMortality result, SingleMonthMortality works correctly for Case 1" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an SingleMonthMortality result, SingleMonthMortality works correctly for Case 2" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000034">
      <Execution id="07E00309-1113-1600-91c4-000000000034" />
      <TestMethod adapterTypeName="xUnit" name="Given an SingleMonthMortality result, SingleMonthMortality works correctly for Case 2" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an SingleMonthMortality result, SingleMonthMortality works correctly for Case 3" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000035">
      <Execution id="07E00309-1113-1600-91c4-000000000035" />
      <TestMethod adapterTypeName="xUnit" name="Given an SingleMonthMortality result, SingleMonthMortality works correctly for Case 3" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a SinglePeriodStraighLine result, SinglePeriodStraightLine works correctly for Case 1" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000036">
      <Execution id="07E00309-1113-1600-91c4-000000000036" />
      <TestMethod adapterTypeName="xUnit" name="Given a SinglePeriodStraighLine result, SinglePeriodStraightLine works correctly for Case 1" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a SinglePeriodStraighLine result, SinglePeriodStraightLine works correctly for Case 2" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000037">
      <Execution id="07E00309-1113-1600-91c4-000000000037" />
      <TestMethod adapterTypeName="xUnit" name="Given a SinglePeriodStraighLine result, SinglePeriodStraightLine works correctly for Case 2" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a SinglePeriodStraighLine result, SinglePeriodStraightLine works correctly for Case 3" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000038">
      <Execution id="07E00309-1113-1600-91c4-000000000038" />
      <TestMethod adapterTypeName="xUnit" name="Given a SinglePeriodStraighLine result, SinglePeriodStraightLine works correctly for Case 3" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: Non-XML: Unicode Escapes: Error Expected" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000039">
      <Execution id="07E00309-1113-1600-91c4-000000000039" />
      <TestMethod adapterTypeName="xUnit" name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: Non-XML: Unicode Escapes: Error Expected" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Child Elements: Unicode Escapes" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000003A">
      <Execution id="07E00309-1113-1600-91c4-00000000003A" />
      <TestMethod adapterTypeName="xUnit" name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Child Elements: Unicode Escapes" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Unicode Escapes Only" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000003B">
      <Execution id="07E00309-1113-1600-91c4-00000000003B" />
      <TestMethod adapterTypeName="xUnit" name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Unicode Escapes Only" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Unicode Escapes and Non-Unicode Escapes" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000003C">
      <Execution id="07E00309-1113-1600-91c4-00000000003C" />
      <TestMethod adapterTypeName="xUnit" name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Unicode Escapes and Non-Unicode Escapes" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000003D">
      <Execution id="07E00309-1113-1600-91c4-00000000003D" />
      <TestMethod adapterTypeName="xUnit" name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes: Malformed XML: Closing Tag same as Open Tag" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000003E">
      <Execution id="07E00309-1113-1600-91c4-00000000003E" />
      <TestMethod adapterTypeName="xUnit" name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes: Malformed XML: Closing Tag same as Open Tag" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes: Malformed XML: Not Closed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000003F">
      <Execution id="07E00309-1113-1600-91c4-00000000003F" />
      <TestMethod adapterTypeName="xUnit" name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes: Malformed XML: Not Closed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes: Malformed XML: Open Tag Only" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000040">
      <Execution id="07E00309-1113-1600-91c4-000000000040" />
      <TestMethod adapterTypeName="xUnit" name="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes: Malformed XML: Open Tag Only" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Attribute does not exist" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000041">
      <Execution id="07E00309-1113-1600-91c4-000000000041" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Attribute does not exist" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with value" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000042">
      <Execution id="07E00309-1113-1600-91c4-000000000042" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with value" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with empty value" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000043">
      <Execution id="07E00309-1113-1600-91c4-000000000043" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with empty value" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with null value" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000044">
      <Execution id="07E00309-1113-1600-91c4-000000000044" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with null value" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with padded spaces" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000045">
      <Execution id="07E00309-1113-1600-91c4-000000000045" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with padded spaces" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Malformed XML Element" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000046">
      <Execution id="07E00309-1113-1600-91c4-000000000046" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Malformed XML Element" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Duplicate attribute names" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000047">
      <Execution id="07E00309-1113-1600-91c4-000000000047" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Duplicate attribute names" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node with value" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000048">
      <Execution id="07E00309-1113-1600-91c4-000000000048" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node with value" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node without value and contains subnode" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000049">
      <Execution id="07E00309-1113-1600-91c4-000000000049" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node without value and contains subnode" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid subnode with value" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000004A">
      <Execution id="07E00309-1113-1600-91c4-00000000004A" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid subnode with value" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid subnode without value" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000004B">
      <Execution id="07E00309-1113-1600-91c4-00000000004B" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid subnode without value" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node with null value" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000004C">
      <Execution id="07E00309-1113-1600-91c4-00000000004C" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node with null value" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node with padded spaces" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000004D">
      <Execution id="07E00309-1113-1600-91c4-00000000004D" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node with padded spaces" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Invalid tag search" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000004E">
      <Execution id="07E00309-1113-1600-91c4-00000000004E" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Invalid tag search" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Malformed XML Element" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000004F">
      <Execution id="07E00309-1113-1600-91c4-00000000004F" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Malformed XML Element" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Duplicate nodes" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000050">
      <Execution id="07E00309-1113-1600-91c4-000000000050" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Duplicate nodes" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlStringIsWellFormed, XmlStringIsWellFormed works correctly for Case: Valid XML String" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000051">
      <Execution id="07E00309-1113-1600-91c4-000000000051" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlStringIsWellFormed, XmlStringIsWellFormed works correctly for Case: Valid XML String" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of XmlStringIsWellFormed, XmlStringIsWellFormed works correctly for Case: Malformed XML String" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000052">
      <Execution id="07E00309-1113-1600-91c4-000000000052" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of XmlStringIsWellFormed, XmlStringIsWellFormed works correctly for Case: Malformed XML String" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of StringSplitSpec, Current method works correctly" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000053">
      <Execution id="07E00309-1113-1600-91c4-000000000053" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of StringSplitSpec, Current method works correctly" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of StringSplitSpec, MoveNext method works correctly" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000054">
      <Execution id="07E00309-1113-1600-91c4-000000000054" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of StringSplitSpec, MoveNext method works correctly" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an instance of StringSplitSpec, Reset method works correctly" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000055">
      <Execution id="07E00309-1113-1600-91c4-000000000055" />
      <TestMethod adapterTypeName="xUnit" name="Given an instance of StringSplitSpec, Reset method works correctly" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000056">
      <Execution id="07E00309-1113-1600-91c4-000000000056" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000057">
      <Execution id="07E00309-1113-1600-91c4-000000000057" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000058">
      <Execution id="07E00309-1113-1600-91c4-000000000058" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000059">
      <Execution id="07E00309-1113-1600-91c4-000000000059" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000005A">
      <Execution id="07E00309-1113-1600-91c4-00000000005A" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000005B">
      <Execution id="07E00309-1113-1600-91c4-00000000005B" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000005C">
      <Execution id="07E00309-1113-1600-91c4-00000000005C" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000005D">
      <Execution id="07E00309-1113-1600-91c4-00000000005D" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000005E">
      <Execution id="07E00309-1113-1600-91c4-00000000005E" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000005F">
      <Execution id="07E00309-1113-1600-91c4-00000000005F" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000060">
      <Execution id="07E00309-1113-1600-91c4-000000000060" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000061">
      <Execution id="07E00309-1113-1600-91c4-000000000061" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000062">
      <Execution id="07E00309-1113-1600-91c4-000000000062" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000063">
      <Execution id="07E00309-1113-1600-91c4-000000000063" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000064">
      <Execution id="07E00309-1113-1600-91c4-000000000064" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000065">
      <Execution id="07E00309-1113-1600-91c4-000000000065" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000066">
      <Execution id="07E00309-1113-1600-91c4-000000000066" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000067">
      <Execution id="07E00309-1113-1600-91c4-000000000067" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000068">
      <Execution id="07E00309-1113-1600-91c4-000000000068" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000069">
      <Execution id="07E00309-1113-1600-91c4-000000000069" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000006A">
      <Execution id="07E00309-1113-1600-91c4-00000000006A" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000006B">
      <Execution id="07E00309-1113-1600-91c4-00000000006B" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000006C">
      <Execution id="07E00309-1113-1600-91c4-00000000006C" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000006D">
      <Execution id="07E00309-1113-1600-91c4-00000000006D" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000006E">
      <Execution id="07E00309-1113-1600-91c4-00000000006E" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000006F">
      <Execution id="07E00309-1113-1600-91c4-00000000006F" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000070">
      <Execution id="07E00309-1113-1600-91c4-000000000070" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000071">
      <Execution id="07E00309-1113-1600-91c4-000000000071" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000072">
      <Execution id="07E00309-1113-1600-91c4-000000000072" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000073">
      <Execution id="07E00309-1113-1600-91c4-000000000073" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000074">
      <Execution id="07E00309-1113-1600-91c4-000000000074" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000075">
      <Execution id="07E00309-1113-1600-91c4-000000000075" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000076">
      <Execution id="07E00309-1113-1600-91c4-000000000076" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000077">
      <Execution id="07E00309-1113-1600-91c4-000000000077" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000078">
      <Execution id="07E00309-1113-1600-91c4-000000000078" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000079">
      <Execution id="07E00309-1113-1600-91c4-000000000079" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000007A">
      <Execution id="07E00309-1113-1600-91c4-00000000007A" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000007B">
      <Execution id="07E00309-1113-1600-91c4-00000000007B" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000007C">
      <Execution id="07E00309-1113-1600-91c4-00000000007C" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000007D">
      <Execution id="07E00309-1113-1600-91c4-00000000007D" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000007E">
      <Execution id="07E00309-1113-1600-91c4-00000000007E" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000007F">
      <Execution id="07E00309-1113-1600-91c4-00000000007F" />
      <TestMethod adapterTypeName="xUnit" name="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_authorization_verdict.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000080">
      <Execution id="07E00309-1113-1600-91c4-000000000080" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_authorization_verdict.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_role_authorization_permission.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000081">
      <Execution id="07E00309-1113-1600-91c4-000000000081" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_role_authorization_permission.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_user_role_strands.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000082">
      <Execution id="07E00309-1113-1600-91c4-000000000082" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_user_role_strands.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(client_format/boolean_to_client_format.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000083">
      <Execution id="07E00309-1113-1600-91c4-000000000083" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(client_format/boolean_to_client_format.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_code_part.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000084">
      <Execution id="07E00309-1113-1600-91c4-000000000084" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_code_part.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000085">
      <Execution id="07E00309-1113-1600-91c4-000000000085" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_put.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000086">
      <Execution id="07E00309-1113-1600-91c4-000000000086" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_put.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/tf_config_value.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000087">
      <Execution id="07E00309-1113-1600-91c4-000000000087" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/tf_config_value.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(context_info/context_info.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000088">
      <Execution id="07E00309-1113-1600-91c4-000000000088" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(context_info/context_info.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(excel_export/excel_export_meta.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000089">
      <Execution id="07E00309-1113-1600-91c4-000000000089" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(excel_export/excel_export_meta.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(excel_export/excel_export_seed.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000008A">
      <Execution id="07E00309-1113-1600-91c4-00000000008A" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(excel_export/excel_export_seed.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(holiday_schedule/put_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000008B">
      <Execution id="07E00309-1113-1600-91c4-00000000008B" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(holiday_schedule/put_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/is_valid_lookup_code.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000008C">
      <Execution id="07E00309-1113-1600-91c4-00000000008C" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/is_valid_lookup_code.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/lookup_code_description.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000008D">
      <Execution id="07E00309-1113-1600-91c4-00000000008D" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/lookup_code_description.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/tf_lookup_code.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000008E">
      <Execution id="07E00309-1113-1600-91c4-00000000008E" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/tf_lookup_code.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_type/put_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000008F">
      <Execution id="07E00309-1113-1600-91c4-00000000008F" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_type/put_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(message/tf_message.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000090">
      <Execution id="07E00309-1113-1600-91c4-000000000090" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(message/tf_message.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(model/model_field_base_type_name.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000091">
      <Execution id="07E00309-1113-1600-91c4-000000000091" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(model/model_field_base_type_name.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(model/model_type_format.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000092">
      <Execution id="07E00309-1113-1600-91c4-000000000092" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(model/model_type_format.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(operation_result/add_operation_message.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000093">
      <Execution id="07E00309-1113-1600-91c4-000000000093" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(operation_result/add_operation_message.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(report_destination/report_destination_seed.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000094">
      <Execution id="07E00309-1113-1600-91c4-000000000094" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(report_destination/report_destination_seed.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/separated_string_to_string_list.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000095">
      <Execution id="07E00309-1113-1600-91c4-000000000095" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/separated_string_to_string_list.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/string_list_to_table.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000096">
      <Execution id="07E00309-1113-1600-91c4-000000000096" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/string_list_to_table.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/table_to_string_list.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000097">
      <Execution id="07E00309-1113-1600-91c4-000000000097" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/table_to_string_list.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/maker_checker.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000098">
      <Execution id="07E00309-1113-1600-91c4-000000000098" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/maker_checker.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/role_put.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000099">
      <Execution id="07E00309-1113-1600-91c4-000000000099" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/role_put.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_del.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000009A">
      <Execution id="07E00309-1113-1600-91c4-00000000009A" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_del.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_id.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000009B">
      <Execution id="07E00309-1113-1600-91c4-00000000009B" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_id.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_put.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000009C">
      <Execution id="07E00309-1113-1600-91c4-00000000009C" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_put.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_put_get.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000009D">
      <Execution id="07E00309-1113-1600-91c4-00000000009D" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_put_get.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_role_association_action.rb)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000009E">
      <Execution id="07E00309-1113-1600-91c4-00000000009E" />
      <TestMethod adapterTypeName="xUnit" name="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_role_association_action.rb)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if characters are passed when expecting numbers." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000009F">
      <Execution id="07E00309-1113-1600-91c4-00000000009F" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns true if characters are passed when expecting numbers." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if numbers are passed when expecting numbers." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A0">
      <Execution id="07E00309-1113-1600-91c4-0000000000A0" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns false if numbers are passed when expecting numbers." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting date in MMM/d/yyyy." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A1">
      <Execution id="07E00309-1113-1600-91c4-0000000000A1" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting date in MMM/d/yyyy." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting date in MMMM/d/yyyy." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A2">
      <Execution id="07E00309-1113-1600-91c4-0000000000A2" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting date in MMMM/d/yyyy." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting literals." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A3">
      <Execution id="07E00309-1113-1600-91c4-0000000000A3" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting literals." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns true if numbers are passed to escaped numeric format value." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A4">
      <Execution id="07E00309-1113-1600-91c4-0000000000A4" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns true if numbers are passed to escaped numeric format value." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if date are passed when expecting date." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A5">
      <Execution id="07E00309-1113-1600-91c4-0000000000A5" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns false if date are passed when expecting date." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if month is passed when expecting month." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A6">
      <Execution id="07E00309-1113-1600-91c4-0000000000A6" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns false if month is passed when expecting month." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if day of week is passed when expecting day of week." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A7">
      <Execution id="07E00309-1113-1600-91c4-0000000000A7" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns false if day of week is passed when expecting day of week." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.IsInvalidClientFormat, it returns false if date and time are passed when expecting date and time." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A8">
      <Execution id="07E00309-1113-1600-91c4-0000000000A8" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.IsInvalidClientFormat, it returns false if date and time are passed when expecting date and time." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats year values correctly." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000A9">
      <Execution id="07E00309-1113-1600-91c4-0000000000A9" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.ToClientFormat, it formats year values correctly." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats month values correctly." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000AA">
      <Execution id="07E00309-1113-1600-91c4-0000000000AA" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.ToClientFormat, it formats month values correctly." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats weekday values correctly." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000AB">
      <Execution id="07E00309-1113-1600-91c4-0000000000AB" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.ToClientFormat, it formats weekday values correctly." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats day of the month values correctly." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000AC">
      <Execution id="07E00309-1113-1600-91c4-0000000000AC" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.ToClientFormat, it formats day of the month values correctly." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats hour values correctly." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000AD">
      <Execution id="07E00309-1113-1600-91c4-0000000000AD" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.ToClientFormat, it formats hour values correctly." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats second values correctly." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000AE">
      <Execution id="07E00309-1113-1600-91c4-0000000000AE" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.ToClientFormat, it formats second values correctly." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it formats special cases and complex formats correctly." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000AF">
      <Execution id="07E00309-1113-1600-91c4-0000000000AF" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.ToClientFormat, it formats special cases and complex formats correctly." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Date.ToClientFormat, it passes performance test for large number of iterations" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B0">
      <Execution id="07E00309-1113-1600-91c4-0000000000B0" />
      <TestMethod adapterTypeName="xUnit" name="Given Date.ToClientFormat, it passes performance test for large number of iterations" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns true if characters are passed when expecting numbers." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B1">
      <Execution id="07E00309-1113-1600-91c4-0000000000B1" />
      <TestMethod adapterTypeName="xUnit" name="Given ClientFormat.IsInvalidNumber, it returns true if characters are passed when expecting numbers." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed when expecting numbers." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B2">
      <Execution id="07E00309-1113-1600-91c4-0000000000B2" />
      <TestMethod adapterTypeName="xUnit" name="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed when expecting numbers." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed when expecting numbers with additional format info." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B3">
      <Execution id="07E00309-1113-1600-91c4-0000000000B3" />
      <TestMethod adapterTypeName="xUnit" name="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed when expecting numbers with additional format info." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed with empty format." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B4">
      <Execution id="07E00309-1113-1600-91c4-0000000000B4" />
      <TestMethod adapterTypeName="xUnit" name="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed with empty format." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given ClientFormat.IsInvalidNumber, it returns true if characters are passed with empty format." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B5">
      <Execution id="07E00309-1113-1600-91c4-0000000000B5" />
      <TestMethod adapterTypeName="xUnit" name="Given ClientFormat.IsInvalidNumber, it returns true if characters are passed with empty format." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Text.RegexReplace, it replaces non-numeric values correctly." storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B6">
      <Execution id="07E00309-1113-1600-91c4-0000000000B6" />
      <TestMethod adapterTypeName="xUnit" name="Given Text.RegexReplace, it replaces non-numeric values correctly." codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a preset ActiveDirectoryGroupMonitor.DbCodeToTimerMap, ActiveDirectoryGroupMonitor correctly monitors the groups" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B7">
      <Execution id="07E00309-1113-1600-91c4-0000000000B7" />
      <TestMethod adapterTypeName="xUnit" name="Given a preset ActiveDirectoryGroupMonitor.DbCodeToTimerMap, ActiveDirectoryGroupMonitor correctly monitors the groups" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a set of templates, the template is generated successfully" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B8">
      <Execution id="07E00309-1113-1600-91c4-0000000000B8" />
      <TestMethod adapterTypeName="xUnit" name="Given a set of templates, the template is generated successfully" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a BrokerQueueClient should be able to process one message at a time" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000B9">
      <Execution id="07E00309-1113-1600-91c4-0000000000B9" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a BrokerQueueClient should be able to process one message at a time" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a BrokerQueueClient should be able to process multiple messages at a time" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000BA">
      <Execution id="07E00309-1113-1600-91c4-0000000000BA" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a BrokerQueueClient should be able to process multiple messages at a time" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given CommonMarkHelper, it correctly converts a Markdown input to a text input" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000BB">
      <Execution id="07E00309-1113-1600-91c4-0000000000BB" />
      <TestMethod adapterTypeName="xUnit" name="Given CommonMarkHelper, it correctly converts a Markdown input to a text input" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given CommonMarkHelper, it correctly converts a Markdown input to HTML input" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000BC">
      <Execution id="07E00309-1113-1600-91c4-0000000000BC" />
      <TestMethod adapterTypeName="xUnit" name="Given CommonMarkHelper, it correctly converts a Markdown input to HTML input" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a model specification can be extracted based on a model stored procedure" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000BD">
      <Execution id="07E00309-1113-1600-91c4-0000000000BD" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a model specification can be extracted based on a model stored procedure" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a deep model tree can be generated based on a single model name" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000BE">
      <Execution id="07E00309-1113-1600-91c4-0000000000BE" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a deep model tree can be generated based on a single model name" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a deep model tree can be deducted based on a list of model names" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000BF">
      <Execution id="07E00309-1113-1600-91c4-0000000000BF" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a deep model tree can be deducted based on a list of model names" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, the system throws an exception when trying to get a non-existing model" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C0">
      <Execution id="07E00309-1113-1600-91c4-0000000000C0" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, the system throws an exception when trying to get a non-existing model" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, tag &quot;bullet_details&quot; is correctly registered and performs as expected" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C1">
      <Execution id="07E00309-1113-1600-91c4-0000000000C1" />
      <TestMethod adapterTypeName="xUnit" name="Given DotLiquidExtensions, tag &quot;bullet_details&quot; is correctly registered and performs as expected" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, tag &quot;bullet_list&quot; is correctly registered and performs as expected" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C2">
      <Execution id="07E00309-1113-1600-91c4-0000000000C2" />
      <TestMethod adapterTypeName="xUnit" name="Given DotLiquidExtensions, tag &quot;bullet_list&quot; is correctly registered and performs as expected" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, filter &quot;zn&quot; is correctly registered and performs as expected" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C3">
      <Execution id="07E00309-1113-1600-91c4-0000000000C3" />
      <TestMethod adapterTypeName="xUnit" name="Given DotLiquidExtensions, filter &quot;zn&quot; is correctly registered and performs as expected" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, filter &quot;markdown&quot; is correctly registered and performs as expected" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C4">
      <Execution id="07E00309-1113-1600-91c4-0000000000C4" />
      <TestMethod adapterTypeName="xUnit" name="Given DotLiquidExtensions, filter &quot;markdown&quot; is correctly registered and performs as expected" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given DotLiquidExtensions, ExcelExportDatasetDimensions can be used in a dotLiquid template to perform arithmetic operations" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C5">
      <Execution id="07E00309-1113-1600-91c4-0000000000C5" />
      <TestMethod adapterTypeName="xUnit" name="Given DotLiquidExtensions, ExcelExportDatasetDimensions can be used in a dotLiquid template to perform arithmetic operations" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport handles hierarchical data" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C6">
      <Execution id="07E00309-1113-1600-91c4-0000000000C6" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport handles hierarchical data" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ColumnAddress works as expected" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C7">
      <Execution id="07E00309-1113-1600-91c4-0000000000C7" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ColumnAddress works as expected" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures and appropriately overrides the return_type request parameter" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C8">
      <Execution id="07E00309-1113-1600-91c4-0000000000C8" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures and appropriately overrides the return_type request parameter" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles various style exports" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000C9">
      <Execution id="07E00309-1113-1600-91c4-0000000000C9" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport correctly handles various style exports" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures with custom Excel template" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000CA">
      <Execution id="07E00309-1113-1600-91c4-0000000000CA" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures with custom Excel template" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures by calling them with return_type=EXCEL" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000CB">
      <Execution id="07E00309-1113-1600-91c4-0000000000CB" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures by calling them with return_type=EXCEL" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly uses the custom excel target file returned by the metadata" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000CC">
      <Execution id="07E00309-1113-1600-91c4-0000000000CC" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport correctly uses the custom excel target file returned by the metadata" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly generates output file name based on the grid title" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000CD">
      <Execution id="07E00309-1113-1600-91c4-0000000000CD" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport correctly generates output file name based on the grid title" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures with custom Excel templates" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000CE">
      <Execution id="07E00309-1113-1600-91c4-0000000000CE" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures with custom Excel templates" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport populates a default excel workbook with the resultset of a stored procedure" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000CF">
      <Execution id="07E00309-1113-1600-91c4-0000000000CF" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport populates a default excel workbook with the resultset of a stored procedure" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport populates an excel workbook with multiple resultsets from a stored procedure" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D0">
      <Execution id="07E00309-1113-1600-91c4-0000000000D0" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport populates an excel workbook with multiple resultsets from a stored procedure" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles type conversions" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D1">
      <Execution id="07E00309-1113-1600-91c4-0000000000D1" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport correctly handles type conversions" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, ExcelExport correctly handles Excel export metadata" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D2">
      <Execution id="07E00309-1113-1600-91c4-0000000000D2" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, ExcelExport correctly handles Excel export metadata" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ExecutionSurface with preloaded test data, the surface contents is as expected" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D3">
      <Execution id="07E00309-1113-1600-91c4-0000000000D3" />
      <TestMethod adapterTypeName="xUnit" name="Given an ExecutionSurface with preloaded test data, the surface contents is as expected" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ExecutionSurface with preloaded test data, authorization works as expected" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D4">
      <Execution id="07E00309-1113-1600-91c4-0000000000D4" />
      <TestMethod adapterTypeName="xUnit" name="Given an ExecutionSurface with preloaded test data, authorization works as expected" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an ExecutionSurface with preloaded test data, authorization works as expected as it relates to role inheritance" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D5">
      <Execution id="07E00309-1113-1600-91c4-0000000000D5" />
      <TestMethod adapterTypeName="xUnit" name="Given an ExecutionSurface with preloaded test data, authorization works as expected as it relates to role inheritance" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an Xml string with an array, it correctly gets converted to an IEnumerable" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D6">
      <Execution id="07E00309-1113-1600-91c4-0000000000D6" />
      <TestMethod adapterTypeName="xUnit" name="Given an Xml string with an array, it correctly gets converted to an IEnumerable" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an object and a Flex, extension method ToObject properly populates an object with the contents of a Flex" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D7">
      <Execution id="07E00309-1113-1600-91c4-0000000000D7" />
      <TestMethod adapterTypeName="xUnit" name="Given an object and a Flex, extension method ToObject properly populates an object with the contents of a Flex" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an object and a Flex, extension method ToObject properly populates an object with the contents of a Flex ins strict mode" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D8">
      <Execution id="07E00309-1113-1600-91c4-0000000000D8" />
      <TestMethod adapterTypeName="xUnit" name="Given an object and a Flex, extension method ToObject properly populates an object with the contents of a Flex ins strict mode" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an object and a Flex, extension method ToObject properly throws in strict mode" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000D9">
      <Execution id="07E00309-1113-1600-91c4-0000000000D9" />
      <TestMethod adapterTypeName="xUnit" name="Given an object and a Flex, extension method ToObject properly throws in strict mode" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a Flex object, it correctly gets converted to an Xml string" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000DA">
      <Execution id="07E00309-1113-1600-91c4-0000000000DA" />
      <TestMethod adapterTypeName="xUnit" name="Given a Flex object, it correctly gets converted to an Xml string" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an IEnumerable&lt;T&gt;, extension method ForEach can be used to enumerate all its elements" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000DB">
      <Execution id="07E00309-1113-1600-91c4-0000000000DB" />
      <TestMethod adapterTypeName="xUnit" name="Given an IEnumerable&lt;T&gt;, extension method ForEach can be used to enumerate all its elements" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an Xml string, it can be converted to a Flex" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000DC">
      <Execution id="07E00309-1113-1600-91c4-0000000000DC" />
      <TestMethod adapterTypeName="xUnit" name="Given an Xml string, it can be converted to a Flex" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Flex, it can be converted to Json" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000DD">
      <Execution id="07E00309-1113-1600-91c4-0000000000DD" />
      <TestMethod adapterTypeName="xUnit" name="Given Flex, it can be converted to Json" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given Flex, a Json value can be converted to a Flex" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000DE">
      <Execution id="07E00309-1113-1600-91c4-0000000000DE" />
      <TestMethod adapterTypeName="xUnit" name="Given Flex, a Json value can be converted to a Flex" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a grid meta can converted to Json" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000DF">
      <Execution id="07E00309-1113-1600-91c4-0000000000DF" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a grid meta can converted to Json" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a string, it can be underscored using the Inflector extension methods" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E0">
      <Execution id="07E00309-1113-1600-91c4-0000000000E0" />
      <TestMethod adapterTypeName="xUnit" name="Given a string, it can be underscored using the Inflector extension methods" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a Json string, it correctly converts it to a .NET object" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E1">
      <Execution id="07E00309-1113-1600-91c4-0000000000E1" />
      <TestMethod adapterTypeName="xUnit" name="Given a Json string, it correctly converts it to a .NET object" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an arbitrary Flex, it correctly converts it to a Json string" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E2">
      <Execution id="07E00309-1113-1600-91c4-0000000000E2" />
      <TestMethod adapterTypeName="xUnit" name="Given an arbitrary Flex, it correctly converts it to a Json string" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given an arbitrary anonymous object, it correctly converts it to a Json string" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E3">
      <Execution id="07E00309-1113-1600-91c4-0000000000E3" />
      <TestMethod adapterTypeName="xUnit" name="Given an arbitrary anonymous object, it correctly converts it to a Json string" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, calling a sproc which divides by zero throws an exception (ANSI_WARNINGS is set to ON)" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E4">
      <Execution id="07E00309-1113-1600-91c4-0000000000E4" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, calling a sproc which divides by zero throws an exception (ANSI_WARNINGS is set to ON)" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs can be executed dynamically through its Sproc property" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E5">
      <Execution id="07E00309-1113-1600-91c4-0000000000E5" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, sprocs can be executed dynamically through its Sproc property" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs with named params can be invoked" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E6">
      <Execution id="07E00309-1113-1600-91c4-0000000000E6" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, sprocs with named params can be invoked" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs with optional params can be invoked" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E7">
      <Execution id="07E00309-1113-1600-91c4-0000000000E7" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, sprocs with optional params can be invoked" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs with 'out' params can be invoked" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E8">
      <Execution id="07E00309-1113-1600-91c4-0000000000E8" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, sprocs with 'out' params can be invoked" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, sprocs with xml 'out' params can be invoked" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000E9">
      <Execution id="07E00309-1113-1600-91c4-0000000000E9" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, sprocs with xml 'out' params can be invoked" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc can be called with arbitrary number of parameters - it will ignore parameters which it does not accept" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000EA">
      <Execution id="07E00309-1113-1600-91c4-0000000000EA" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a sproc can be called with arbitrary number of parameters - it will ignore parameters which it does not accept" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an array of objects is passed to the udnerlying sproc as a table" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000EB">
      <Execution id="07E00309-1113-1600-91c4-0000000000EB" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, an array of objects is passed to the udnerlying sproc as a table" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an array with disjointed elements can be passed as a parameter to a sproc which takes a table valued parameter" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000EC">
      <Execution id="07E00309-1113-1600-91c4-0000000000EC" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, an array with disjointed elements can be passed as a parameter to a sproc which takes a table valued parameter" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a complex object can be passed to a sproc which takes an XML input parameter" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000ED">
      <Execution id="07E00309-1113-1600-91c4-0000000000ED" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a complex object can be passed to a sproc which takes an XML input parameter" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an object is passed to the udnerlying sproc as a table" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000EE">
      <Execution id="07E00309-1113-1600-91c4-0000000000EE" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, an object is passed to the udnerlying sproc as a table" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an array of objects is passed to the udnerlying sproc as a table and used by it" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000EF">
      <Execution id="07E00309-1113-1600-91c4-0000000000EF" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, an array of objects is passed to the udnerlying sproc as a table and used by it" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc's resultset which contains a hierarchy_child_id and hierarchy_parent_id is compiled into a hierarchical resultset" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F0">
      <Execution id="07E00309-1113-1600-91c4-0000000000F0" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a sproc's resultset which contains a hierarchy_child_id and hierarchy_parent_id is compiled into a hierarchical resultset" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a hierarchical result pushes all orphans to the top of the hierarchy" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F1">
      <Execution id="07E00309-1113-1600-91c4-0000000000F1" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a hierarchical result pushes all orphans to the top of the hierarchy" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a hierarchical result does not omit children of missing parents when there is a single record in the recordset" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F2">
      <Execution id="07E00309-1113-1600-91c4-0000000000F2" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a hierarchical result does not omit children of missing parents when there is a single record in the recordset" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a hierarchical result omits shallow circular reference chains" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F3">
      <Execution id="07E00309-1113-1600-91c4-0000000000F3" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a hierarchical result omits shallow circular reference chains" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a hierarchical result omits deep circular reference chains" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F4">
      <Execution id="07E00309-1113-1600-91c4-0000000000F4" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a hierarchical result omits deep circular reference chains" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc which accepts INT parameters can be called with a string representation of an INT" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F5">
      <Execution id="07E00309-1113-1600-91c4-0000000000F5" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a sproc which accepts INT parameters can be called with a string representation of an INT" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc which accepts INT parameters can be called with an empty string which is internally converted to NULL" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F6">
      <Execution id="07E00309-1113-1600-91c4-0000000000F6" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a sproc which accepts INT parameters can be called with an empty string which is internally converted to NULL" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc returns an error message in the operation result and stops the sproc execution when an error message is reported" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F7">
      <Execution id="07E00309-1113-1600-91c4-0000000000F7" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a sproc returns an error message in the operation result and stops the sproc execution when an error message is reported" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, an error message includes the SQL call-stack when enabled" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F8">
      <Execution id="07E00309-1113-1600-91c4-0000000000F8" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, an error message includes the SQL call-stack when enabled" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc returns a warning message in the operation result and stops the sproc execution when a warning message is reported" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000F9">
      <Execution id="07E00309-1113-1600-91c4-0000000000F9" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a sproc returns a warning message in the operation result and stops the sproc execution when a warning message is reported" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc returns an info message in the operation result and does not stop the sproc execution when an info message is reported" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000FA">
      <Execution id="07E00309-1113-1600-91c4-0000000000FA" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a sproc returns an info message in the operation result and does not stop the sproc execution when an info message is reported" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a sproc can respond with a collection of messages" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000FB">
      <Execution id="07E00309-1113-1600-91c4-0000000000FB" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a sproc can respond with a collection of messages" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a nested sproc returns an error message in the operation result and stops the sproc execution when an error message is reported" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000FC">
      <Execution id="07E00309-1113-1600-91c4-0000000000FC" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a nested sproc returns an error message in the operation result and stops the sproc execution when an error message is reported" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a nested sproc returns a warning message in the operation result and stops the sproc execution when a warning message is reported" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000FD">
      <Execution id="07E00309-1113-1600-91c4-0000000000FD" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a nested sproc returns a warning message in the operation result and stops the sproc execution when a warning message is reported" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a nested sproc returns an info message in the operation result and does not stop the sproc execution when an info message is reported" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000FE">
      <Execution id="07E00309-1113-1600-91c4-0000000000FE" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a nested sproc returns an info message in the operation result and does not stop the sproc execution when an info message is reported" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, a nested sproc can respond with a collection of messages" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-0000000000FF">
      <Execution id="07E00309-1113-1600-91c4-0000000000FF" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, a nested sproc can respond with a collection of messages" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc can be called with a pre and post closure with an open connection" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000100">
      <Execution id="07E00309-1113-1600-91c4-000000000100" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc can be called with a pre and post closure with an open connection" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController can be used to import an Excel file directly into a table" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000101">
      <Execution id="07E00309-1113-1600-91c4-000000000101" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, DirectFileController can be used to import an Excel file directly into a table" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController offers option to load worksheets with missing fields" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000102">
      <Execution id="07E00309-1113-1600-91c4-000000000102" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, DirectFileController offers option to load worksheets with missing fields" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController offers option to load worksheets with extra fields" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000103">
      <Execution id="07E00309-1113-1600-91c4-000000000103" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, DirectFileController offers option to load worksheets with extra fields" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController detects missing worksheets" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000104">
      <Execution id="07E00309-1113-1600-91c4-000000000104" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, DirectFileController detects missing worksheets" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController offers an option to run a post-load stored procedure as part of the import operation" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000105">
      <Execution id="07E00309-1113-1600-91c4-000000000105" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, DirectFileController offers an option to run a post-load stored procedure as part of the import operation" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, DirectFileController correctly processes operation result messages generated by the post-load stored procedure" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000106">
      <Execution id="07E00309-1113-1600-91c4-000000000106" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, DirectFileController correctly processes operation result messages generated by the post-load stored procedure" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Assert" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000107">
      <Execution id="07E00309-1113-1600-91c4-000000000107" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Assert" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController can call simple sprocs with parameters" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000108">
      <Execution id="07E00309-1113-1600-91c4-000000000108" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, SprocController can call simple sprocs with parameters" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController correctly handles ISO 8601 dates as parameters" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000109">
      <Execution id="07E00309-1113-1600-91c4-000000000109" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, SprocController correctly handles ISO 8601 dates as parameters" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController can call sprocs with XML out parameters" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000010A">
      <Execution id="07E00309-1113-1600-91c4-00000000010A" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, SprocController can call sprocs with XML out parameters" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController correctly handles XML typed elements" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000010B">
      <Execution id="07E00309-1113-1600-91c4-00000000010B" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, SprocController correctly handles XML typed elements" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, SprocController correctly reports field SQL data types" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000010C">
      <Execution id="07E00309-1113-1600-91c4-00000000010C" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, SprocController correctly reports field SQL data types" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a list of records on GET without a specified ID" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000010D">
      <Execution id="07E00309-1113-1600-91c4-00000000010D" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a list of records on GET without a specified ID" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a single record when GET is called with an ID parameter" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000010E">
      <Execution id="07E00309-1113-1600-91c4-00000000010E" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a single record when GET is called with an ID parameter" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller creates a single new record when _put sproc is called" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000010F">
      <Execution id="07E00309-1113-1600-91c4-00000000010F" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller creates a single new record when _put sproc is called" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller performs a record edit when _put sproc is called on an existing record" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000110">
      <Execution id="07E00309-1113-1600-91c4-000000000110" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller performs a record edit when _put sproc is called on an existing record" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a single property-value filter is specified as a request parameter" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000111">
      <Execution id="07E00309-1113-1600-91c4-000000000111" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a single property-value filter is specified as a request parameter" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a multi property-value filter is specified as a request parameter" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000112">
      <Execution id="07E00309-1113-1600-91c4-000000000112" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a multi property-value filter is specified as a request parameter" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when an exact string match filter is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000113">
      <Execution id="07E00309-1113-1600-91c4-000000000113" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when an exact string match filter is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when an exact string match filter is executed with the wrong string value" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000114">
      <Execution id="07E00309-1113-1600-91c4-000000000114" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when an exact string match filter is executed with the wrong string value" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a &quot;like&quot; string match filter is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000115">
      <Execution id="07E00309-1113-1600-91c4-000000000115" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a &quot;like&quot; string match filter is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when an exact string match filter is executed with the wrong string value" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000116">
      <Execution id="07E00309-1113-1600-91c4-000000000116" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when an exact string match filter is executed with the wrong string value" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric greater than comparison is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000117">
      <Execution id="07E00309-1113-1600-91c4-000000000117" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric greater than comparison is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric greater than comparison is executed with a number equal to the max" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000118">
      <Execution id="07E00309-1113-1600-91c4-000000000118" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric greater than comparison is executed with a number equal to the max" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric less than comparison is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000119">
      <Execution id="07E00309-1113-1600-91c4-000000000119" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric less than comparison is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric less than comparison is executed with a number equal to the min" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000011A">
      <Execution id="07E00309-1113-1600-91c4-00000000011A" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric less than comparison is executed with a number equal to the min" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric equal to comparison is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000011B">
      <Execution id="07E00309-1113-1600-91c4-00000000011B" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric equal to comparison is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric equal to comparison is executed with a number which does not exist in the database model" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000011C">
      <Execution id="07E00309-1113-1600-91c4-00000000011C" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric equal to comparison is executed with a number which does not exist in the database model" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date greater than comparison is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000011D">
      <Execution id="07E00309-1113-1600-91c4-00000000011D" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date greater than comparison is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date greater than comparison is executed with a number equal to the max" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000011E">
      <Execution id="07E00309-1113-1600-91c4-00000000011E" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date greater than comparison is executed with a number equal to the max" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date less than comparison is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-00000000011F">
      <Execution id="07E00309-1113-1600-91c4-00000000011F" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date less than comparison is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date less than comparison is executed with a number equal to the min" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000120">
      <Execution id="07E00309-1113-1600-91c4-000000000120" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date less than comparison is executed with a number equal to the min" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date equal to comparison is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000121">
      <Execution id="07E00309-1113-1600-91c4-000000000121" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date equal to comparison is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date equal to comparison is executed with a date which does not exist in the database model" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000122">
      <Execution id="07E00309-1113-1600-91c4-000000000122" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date equal to comparison is executed with a date which does not exist in the database model" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when true boolean equal to comparison is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000123">
      <Execution id="07E00309-1113-1600-91c4-000000000123" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when true boolean equal to comparison is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when false boolean equal to comparison is executed" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000124">
      <Execution id="07E00309-1113-1600-91c4-000000000124" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when false boolean equal to comparison is executed" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when true boolean equal to comparison is executed against a field which is all false" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000125">
      <Execution id="07E00309-1113-1600-91c4-000000000125" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when true boolean equal to comparison is executed against a field which is all false" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
    <UnitTest name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when false boolean equal to comparison is executed against a field which is all true" storage="\xUnit.net Tests" id="07E00309-1113-1600-91c4-000000000126">
      <Execution id="07E00309-1113-1600-91c4-000000000126" />
      <TestMethod adapterTypeName="xUnit" name="Given a BeachcomberContext, Sproc Controller returns an empty list of records when false boolean equal to comparison is executed against a field which is all true" codeBase="\xUnit.net Tests" className="NA, " />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000001" executionId="07E00309-1113-1600-91c4-000000000001" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000002" executionId="07E00309-1113-1600-91c4-000000000002" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000003" executionId="07E00309-1113-1600-91c4-000000000003" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000004" executionId="07E00309-1113-1600-91c4-000000000004" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000005" executionId="07E00309-1113-1600-91c4-000000000005" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000006" executionId="07E00309-1113-1600-91c4-000000000006" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000007" executionId="07E00309-1113-1600-91c4-000000000007" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000008" executionId="07E00309-1113-1600-91c4-000000000008" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000009" executionId="07E00309-1113-1600-91c4-000000000009" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000000A" executionId="07E00309-1113-1600-91c4-00000000000A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000000B" executionId="07E00309-1113-1600-91c4-00000000000B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000000C" executionId="07E00309-1113-1600-91c4-00000000000C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000000D" executionId="07E00309-1113-1600-91c4-00000000000D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000000E" executionId="07E00309-1113-1600-91c4-00000000000E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000000F" executionId="07E00309-1113-1600-91c4-00000000000F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000010" executionId="07E00309-1113-1600-91c4-000000000010" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000011" executionId="07E00309-1113-1600-91c4-000000000011" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000012" executionId="07E00309-1113-1600-91c4-000000000012" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000013" executionId="07E00309-1113-1600-91c4-000000000013" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000014" executionId="07E00309-1113-1600-91c4-000000000014" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000015" executionId="07E00309-1113-1600-91c4-000000000015" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000016" executionId="07E00309-1113-1600-91c4-000000000016" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000017" executionId="07E00309-1113-1600-91c4-000000000017" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000018" executionId="07E00309-1113-1600-91c4-000000000018" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000019" executionId="07E00309-1113-1600-91c4-000000000019" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000001A" executionId="07E00309-1113-1600-91c4-00000000001A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000001B" executionId="07E00309-1113-1600-91c4-00000000001B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000001C" executionId="07E00309-1113-1600-91c4-00000000001C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000001D" executionId="07E00309-1113-1600-91c4-00000000001D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000001E" executionId="07E00309-1113-1600-91c4-00000000001E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000001F" executionId="07E00309-1113-1600-91c4-00000000001F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000020" executionId="07E00309-1113-1600-91c4-000000000020" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000021" executionId="07E00309-1113-1600-91c4-000000000021" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000022" executionId="07E00309-1113-1600-91c4-000000000022" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000023" executionId="07E00309-1113-1600-91c4-000000000023" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000024" executionId="07E00309-1113-1600-91c4-000000000024" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000025" executionId="07E00309-1113-1600-91c4-000000000025" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000026" executionId="07E00309-1113-1600-91c4-000000000026" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000027" executionId="07E00309-1113-1600-91c4-000000000027" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000028" executionId="07E00309-1113-1600-91c4-000000000028" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000029" executionId="07E00309-1113-1600-91c4-000000000029" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000002A" executionId="07E00309-1113-1600-91c4-00000000002A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000002B" executionId="07E00309-1113-1600-91c4-00000000002B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000002C" executionId="07E00309-1113-1600-91c4-00000000002C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000002D" executionId="07E00309-1113-1600-91c4-00000000002D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000002E" executionId="07E00309-1113-1600-91c4-00000000002E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000002F" executionId="07E00309-1113-1600-91c4-00000000002F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000030" executionId="07E00309-1113-1600-91c4-000000000030" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000031" executionId="07E00309-1113-1600-91c4-000000000031" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000032" executionId="07E00309-1113-1600-91c4-000000000032" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000033" executionId="07E00309-1113-1600-91c4-000000000033" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000034" executionId="07E00309-1113-1600-91c4-000000000034" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000035" executionId="07E00309-1113-1600-91c4-000000000035" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000036" executionId="07E00309-1113-1600-91c4-000000000036" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000037" executionId="07E00309-1113-1600-91c4-000000000037" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000038" executionId="07E00309-1113-1600-91c4-000000000038" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000039" executionId="07E00309-1113-1600-91c4-000000000039" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000003A" executionId="07E00309-1113-1600-91c4-00000000003A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000003B" executionId="07E00309-1113-1600-91c4-00000000003B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000003C" executionId="07E00309-1113-1600-91c4-00000000003C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000003D" executionId="07E00309-1113-1600-91c4-00000000003D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000003E" executionId="07E00309-1113-1600-91c4-00000000003E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000003F" executionId="07E00309-1113-1600-91c4-00000000003F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000040" executionId="07E00309-1113-1600-91c4-000000000040" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000041" executionId="07E00309-1113-1600-91c4-000000000041" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000042" executionId="07E00309-1113-1600-91c4-000000000042" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000043" executionId="07E00309-1113-1600-91c4-000000000043" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000044" executionId="07E00309-1113-1600-91c4-000000000044" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000045" executionId="07E00309-1113-1600-91c4-000000000045" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000046" executionId="07E00309-1113-1600-91c4-000000000046" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000047" executionId="07E00309-1113-1600-91c4-000000000047" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000048" executionId="07E00309-1113-1600-91c4-000000000048" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000049" executionId="07E00309-1113-1600-91c4-000000000049" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000004A" executionId="07E00309-1113-1600-91c4-00000000004A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000004B" executionId="07E00309-1113-1600-91c4-00000000004B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000004C" executionId="07E00309-1113-1600-91c4-00000000004C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000004D" executionId="07E00309-1113-1600-91c4-00000000004D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000004E" executionId="07E00309-1113-1600-91c4-00000000004E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000004F" executionId="07E00309-1113-1600-91c4-00000000004F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000050" executionId="07E00309-1113-1600-91c4-000000000050" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000051" executionId="07E00309-1113-1600-91c4-000000000051" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000052" executionId="07E00309-1113-1600-91c4-000000000052" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000053" executionId="07E00309-1113-1600-91c4-000000000053" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000054" executionId="07E00309-1113-1600-91c4-000000000054" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000055" executionId="07E00309-1113-1600-91c4-000000000055" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000056" executionId="07E00309-1113-1600-91c4-000000000056" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000057" executionId="07E00309-1113-1600-91c4-000000000057" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000058" executionId="07E00309-1113-1600-91c4-000000000058" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000059" executionId="07E00309-1113-1600-91c4-000000000059" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000005A" executionId="07E00309-1113-1600-91c4-00000000005A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000005B" executionId="07E00309-1113-1600-91c4-00000000005B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000005C" executionId="07E00309-1113-1600-91c4-00000000005C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000005D" executionId="07E00309-1113-1600-91c4-00000000005D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000005E" executionId="07E00309-1113-1600-91c4-00000000005E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000005F" executionId="07E00309-1113-1600-91c4-00000000005F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000060" executionId="07E00309-1113-1600-91c4-000000000060" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000061" executionId="07E00309-1113-1600-91c4-000000000061" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000062" executionId="07E00309-1113-1600-91c4-000000000062" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000063" executionId="07E00309-1113-1600-91c4-000000000063" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000064" executionId="07E00309-1113-1600-91c4-000000000064" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000065" executionId="07E00309-1113-1600-91c4-000000000065" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000066" executionId="07E00309-1113-1600-91c4-000000000066" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000067" executionId="07E00309-1113-1600-91c4-000000000067" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000068" executionId="07E00309-1113-1600-91c4-000000000068" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000069" executionId="07E00309-1113-1600-91c4-000000000069" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000006A" executionId="07E00309-1113-1600-91c4-00000000006A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000006B" executionId="07E00309-1113-1600-91c4-00000000006B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000006C" executionId="07E00309-1113-1600-91c4-00000000006C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000006D" executionId="07E00309-1113-1600-91c4-00000000006D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000006E" executionId="07E00309-1113-1600-91c4-00000000006E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000006F" executionId="07E00309-1113-1600-91c4-00000000006F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000070" executionId="07E00309-1113-1600-91c4-000000000070" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000071" executionId="07E00309-1113-1600-91c4-000000000071" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000072" executionId="07E00309-1113-1600-91c4-000000000072" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000073" executionId="07E00309-1113-1600-91c4-000000000073" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000074" executionId="07E00309-1113-1600-91c4-000000000074" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000075" executionId="07E00309-1113-1600-91c4-000000000075" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000076" executionId="07E00309-1113-1600-91c4-000000000076" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000077" executionId="07E00309-1113-1600-91c4-000000000077" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000078" executionId="07E00309-1113-1600-91c4-000000000078" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000079" executionId="07E00309-1113-1600-91c4-000000000079" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000007A" executionId="07E00309-1113-1600-91c4-00000000007A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000007B" executionId="07E00309-1113-1600-91c4-00000000007B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000007C" executionId="07E00309-1113-1600-91c4-00000000007C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000007D" executionId="07E00309-1113-1600-91c4-00000000007D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000007E" executionId="07E00309-1113-1600-91c4-00000000007E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000007F" executionId="07E00309-1113-1600-91c4-00000000007F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000080" executionId="07E00309-1113-1600-91c4-000000000080" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000081" executionId="07E00309-1113-1600-91c4-000000000081" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000082" executionId="07E00309-1113-1600-91c4-000000000082" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000083" executionId="07E00309-1113-1600-91c4-000000000083" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000084" executionId="07E00309-1113-1600-91c4-000000000084" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000085" executionId="07E00309-1113-1600-91c4-000000000085" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000086" executionId="07E00309-1113-1600-91c4-000000000086" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000087" executionId="07E00309-1113-1600-91c4-000000000087" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000088" executionId="07E00309-1113-1600-91c4-000000000088" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000089" executionId="07E00309-1113-1600-91c4-000000000089" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000008A" executionId="07E00309-1113-1600-91c4-00000000008A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000008B" executionId="07E00309-1113-1600-91c4-00000000008B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000008C" executionId="07E00309-1113-1600-91c4-00000000008C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000008D" executionId="07E00309-1113-1600-91c4-00000000008D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000008E" executionId="07E00309-1113-1600-91c4-00000000008E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000008F" executionId="07E00309-1113-1600-91c4-00000000008F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000090" executionId="07E00309-1113-1600-91c4-000000000090" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000091" executionId="07E00309-1113-1600-91c4-000000000091" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000092" executionId="07E00309-1113-1600-91c4-000000000092" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000093" executionId="07E00309-1113-1600-91c4-000000000093" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000094" executionId="07E00309-1113-1600-91c4-000000000094" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000095" executionId="07E00309-1113-1600-91c4-000000000095" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000096" executionId="07E00309-1113-1600-91c4-000000000096" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000097" executionId="07E00309-1113-1600-91c4-000000000097" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000098" executionId="07E00309-1113-1600-91c4-000000000098" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000099" executionId="07E00309-1113-1600-91c4-000000000099" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000009A" executionId="07E00309-1113-1600-91c4-00000000009A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000009B" executionId="07E00309-1113-1600-91c4-00000000009B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000009C" executionId="07E00309-1113-1600-91c4-00000000009C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000009D" executionId="07E00309-1113-1600-91c4-00000000009D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000009E" executionId="07E00309-1113-1600-91c4-00000000009E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000009F" executionId="07E00309-1113-1600-91c4-00000000009F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A0" executionId="07E00309-1113-1600-91c4-0000000000A0" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A1" executionId="07E00309-1113-1600-91c4-0000000000A1" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A2" executionId="07E00309-1113-1600-91c4-0000000000A2" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A3" executionId="07E00309-1113-1600-91c4-0000000000A3" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A4" executionId="07E00309-1113-1600-91c4-0000000000A4" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A5" executionId="07E00309-1113-1600-91c4-0000000000A5" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A6" executionId="07E00309-1113-1600-91c4-0000000000A6" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A7" executionId="07E00309-1113-1600-91c4-0000000000A7" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A8" executionId="07E00309-1113-1600-91c4-0000000000A8" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000A9" executionId="07E00309-1113-1600-91c4-0000000000A9" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000AA" executionId="07E00309-1113-1600-91c4-0000000000AA" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000AB" executionId="07E00309-1113-1600-91c4-0000000000AB" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000AC" executionId="07E00309-1113-1600-91c4-0000000000AC" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000AD" executionId="07E00309-1113-1600-91c4-0000000000AD" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000AE" executionId="07E00309-1113-1600-91c4-0000000000AE" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000AF" executionId="07E00309-1113-1600-91c4-0000000000AF" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B0" executionId="07E00309-1113-1600-91c4-0000000000B0" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B1" executionId="07E00309-1113-1600-91c4-0000000000B1" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B2" executionId="07E00309-1113-1600-91c4-0000000000B2" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B3" executionId="07E00309-1113-1600-91c4-0000000000B3" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B4" executionId="07E00309-1113-1600-91c4-0000000000B4" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B5" executionId="07E00309-1113-1600-91c4-0000000000B5" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B6" executionId="07E00309-1113-1600-91c4-0000000000B6" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B7" executionId="07E00309-1113-1600-91c4-0000000000B7" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B8" executionId="07E00309-1113-1600-91c4-0000000000B8" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000B9" executionId="07E00309-1113-1600-91c4-0000000000B9" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000BA" executionId="07E00309-1113-1600-91c4-0000000000BA" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000BB" executionId="07E00309-1113-1600-91c4-0000000000BB" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000BC" executionId="07E00309-1113-1600-91c4-0000000000BC" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000BD" executionId="07E00309-1113-1600-91c4-0000000000BD" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000BE" executionId="07E00309-1113-1600-91c4-0000000000BE" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000BF" executionId="07E00309-1113-1600-91c4-0000000000BF" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C0" executionId="07E00309-1113-1600-91c4-0000000000C0" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C1" executionId="07E00309-1113-1600-91c4-0000000000C1" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C2" executionId="07E00309-1113-1600-91c4-0000000000C2" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C3" executionId="07E00309-1113-1600-91c4-0000000000C3" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C4" executionId="07E00309-1113-1600-91c4-0000000000C4" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C5" executionId="07E00309-1113-1600-91c4-0000000000C5" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C6" executionId="07E00309-1113-1600-91c4-0000000000C6" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C7" executionId="07E00309-1113-1600-91c4-0000000000C7" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C8" executionId="07E00309-1113-1600-91c4-0000000000C8" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000C9" executionId="07E00309-1113-1600-91c4-0000000000C9" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000CA" executionId="07E00309-1113-1600-91c4-0000000000CA" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000CB" executionId="07E00309-1113-1600-91c4-0000000000CB" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000CC" executionId="07E00309-1113-1600-91c4-0000000000CC" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000CD" executionId="07E00309-1113-1600-91c4-0000000000CD" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000CE" executionId="07E00309-1113-1600-91c4-0000000000CE" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000CF" executionId="07E00309-1113-1600-91c4-0000000000CF" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D0" executionId="07E00309-1113-1600-91c4-0000000000D0" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D1" executionId="07E00309-1113-1600-91c4-0000000000D1" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D2" executionId="07E00309-1113-1600-91c4-0000000000D2" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D3" executionId="07E00309-1113-1600-91c4-0000000000D3" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D4" executionId="07E00309-1113-1600-91c4-0000000000D4" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D5" executionId="07E00309-1113-1600-91c4-0000000000D5" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D6" executionId="07E00309-1113-1600-91c4-0000000000D6" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D7" executionId="07E00309-1113-1600-91c4-0000000000D7" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D8" executionId="07E00309-1113-1600-91c4-0000000000D8" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000D9" executionId="07E00309-1113-1600-91c4-0000000000D9" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000DA" executionId="07E00309-1113-1600-91c4-0000000000DA" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000DB" executionId="07E00309-1113-1600-91c4-0000000000DB" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000DC" executionId="07E00309-1113-1600-91c4-0000000000DC" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000DD" executionId="07E00309-1113-1600-91c4-0000000000DD" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000DE" executionId="07E00309-1113-1600-91c4-0000000000DE" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000DF" executionId="07E00309-1113-1600-91c4-0000000000DF" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E0" executionId="07E00309-1113-1600-91c4-0000000000E0" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E1" executionId="07E00309-1113-1600-91c4-0000000000E1" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E2" executionId="07E00309-1113-1600-91c4-0000000000E2" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E3" executionId="07E00309-1113-1600-91c4-0000000000E3" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E4" executionId="07E00309-1113-1600-91c4-0000000000E4" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E5" executionId="07E00309-1113-1600-91c4-0000000000E5" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E6" executionId="07E00309-1113-1600-91c4-0000000000E6" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E7" executionId="07E00309-1113-1600-91c4-0000000000E7" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E8" executionId="07E00309-1113-1600-91c4-0000000000E8" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000E9" executionId="07E00309-1113-1600-91c4-0000000000E9" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000EA" executionId="07E00309-1113-1600-91c4-0000000000EA" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000EB" executionId="07E00309-1113-1600-91c4-0000000000EB" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000EC" executionId="07E00309-1113-1600-91c4-0000000000EC" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000ED" executionId="07E00309-1113-1600-91c4-0000000000ED" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000EE" executionId="07E00309-1113-1600-91c4-0000000000EE" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000EF" executionId="07E00309-1113-1600-91c4-0000000000EF" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F0" executionId="07E00309-1113-1600-91c4-0000000000F0" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F1" executionId="07E00309-1113-1600-91c4-0000000000F1" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F2" executionId="07E00309-1113-1600-91c4-0000000000F2" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F3" executionId="07E00309-1113-1600-91c4-0000000000F3" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F4" executionId="07E00309-1113-1600-91c4-0000000000F4" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F5" executionId="07E00309-1113-1600-91c4-0000000000F5" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F6" executionId="07E00309-1113-1600-91c4-0000000000F6" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F7" executionId="07E00309-1113-1600-91c4-0000000000F7" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F8" executionId="07E00309-1113-1600-91c4-0000000000F8" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000F9" executionId="07E00309-1113-1600-91c4-0000000000F9" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000FA" executionId="07E00309-1113-1600-91c4-0000000000FA" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000FB" executionId="07E00309-1113-1600-91c4-0000000000FB" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000FC" executionId="07E00309-1113-1600-91c4-0000000000FC" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000FD" executionId="07E00309-1113-1600-91c4-0000000000FD" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000FE" executionId="07E00309-1113-1600-91c4-0000000000FE" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-0000000000FF" executionId="07E00309-1113-1600-91c4-0000000000FF" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000100" executionId="07E00309-1113-1600-91c4-000000000100" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000101" executionId="07E00309-1113-1600-91c4-000000000101" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000102" executionId="07E00309-1113-1600-91c4-000000000102" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000103" executionId="07E00309-1113-1600-91c4-000000000103" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000104" executionId="07E00309-1113-1600-91c4-000000000104" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000105" executionId="07E00309-1113-1600-91c4-000000000105" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000106" executionId="07E00309-1113-1600-91c4-000000000106" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000107" executionId="07E00309-1113-1600-91c4-000000000107" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000108" executionId="07E00309-1113-1600-91c4-000000000108" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000109" executionId="07E00309-1113-1600-91c4-000000000109" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000010A" executionId="07E00309-1113-1600-91c4-00000000010A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000010B" executionId="07E00309-1113-1600-91c4-00000000010B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000010C" executionId="07E00309-1113-1600-91c4-00000000010C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000010D" executionId="07E00309-1113-1600-91c4-00000000010D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000010E" executionId="07E00309-1113-1600-91c4-00000000010E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000010F" executionId="07E00309-1113-1600-91c4-00000000010F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000110" executionId="07E00309-1113-1600-91c4-000000000110" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000111" executionId="07E00309-1113-1600-91c4-000000000111" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000112" executionId="07E00309-1113-1600-91c4-000000000112" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000113" executionId="07E00309-1113-1600-91c4-000000000113" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000114" executionId="07E00309-1113-1600-91c4-000000000114" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000115" executionId="07E00309-1113-1600-91c4-000000000115" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000116" executionId="07E00309-1113-1600-91c4-000000000116" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000117" executionId="07E00309-1113-1600-91c4-000000000117" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000118" executionId="07E00309-1113-1600-91c4-000000000118" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000119" executionId="07E00309-1113-1600-91c4-000000000119" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000011A" executionId="07E00309-1113-1600-91c4-00000000011A" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000011B" executionId="07E00309-1113-1600-91c4-00000000011B" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000011C" executionId="07E00309-1113-1600-91c4-00000000011C" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000011D" executionId="07E00309-1113-1600-91c4-00000000011D" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000011E" executionId="07E00309-1113-1600-91c4-00000000011E" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-00000000011F" executionId="07E00309-1113-1600-91c4-00000000011F" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000120" executionId="07E00309-1113-1600-91c4-000000000120" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000121" executionId="07E00309-1113-1600-91c4-000000000121" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000122" executionId="07E00309-1113-1600-91c4-000000000122" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000123" executionId="07E00309-1113-1600-91c4-000000000123" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000124" executionId="07E00309-1113-1600-91c4-000000000124" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000125" executionId="07E00309-1113-1600-91c4-000000000125" />
    <TestEntry testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testId="07E00309-1113-1600-91c4-000000000126" executionId="07E00309-1113-1600-91c4-000000000126" />
  </TestEntries>
  <Results>
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecificSpecTester.RunThisSpec" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000001" executionId="07E00309-1113-1600-91c4-000000000001" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calculations/FractionOfAmount.function.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000002" executionId="07E00309-1113-1600-91c4-000000000002" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calculations/IsEqual.function.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000003" executionId="07E00309-1113-1600-91c4-000000000003" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calendar_and_workflow/DateAddMonth.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000004" executionId="07E00309-1113-1600-91c4-000000000004" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calendar_and_workflow/DateAddPeriod.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000005" executionId="07E00309-1113-1600-91c4-000000000005" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/calendar_and_workflow/SetDayOfMonth.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000006" executionId="07E00309-1113-1600-91c4-000000000006" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_ConvertToTableValue.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000007" executionId="07E00309-1113-1600-91c4-000000000007" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_DisplayValueParse.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000008" executionId="07E00309-1113-1600-91c4-000000000008" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyDesc.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000009" executionId="07E00309-1113-1600-91c4-000000000009" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyModelFieldBaseType.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000000A" executionId="07E00309-1113-1600-91c4-00000000000A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyValueDesc.rb)" duration="00:00:03.0000000" testId="07E00309-1113-1600-91c4-00000000000B" executionId="07E00309-1113-1600-91c4-00000000000B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/data_dictionary/DD_PropertyValueIsExpression.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000000C" executionId="07E00309-1113-1600-91c4-00000000000C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/event/EventApplicationIdsToXML.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000000D" executionId="07E00309-1113-1600-91c4-00000000000D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/scalar_functions/event/EventId.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000000E" executionId="07E00309-1113-1600-91c4-00000000000E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/calculation_model/CM_Set_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000000F" executionId="07E00309-1113-1600-91c4-00000000000F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/calculation_model/CM_Set_Model_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000010" executionId="07E00309-1113-1600-91c4-000000000010" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_Area_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000011" executionId="07E00309-1113-1600-91c4-000000000011" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_del.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000012" executionId="07E00309-1113-1600-91c4-000000000012" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_get.rb)" duration="00:00:04.0000000" testId="07E00309-1113-1600-91c4-000000000013" executionId="07E00309-1113-1600-91c4-000000000013" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_put.rb)" duration="00:00:02.0000000" testId="07E00309-1113-1600-91c4-000000000014" executionId="07E00309-1113-1600-91c4-000000000014" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_Value_calculate.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000015" executionId="07E00309-1113-1600-91c4-000000000015" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/data_dictionary/DD_Property_Value_put.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000016" executionId="07E00309-1113-1600-91c4-000000000016" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_Log_put.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000017" executionId="07E00309-1113-1600-91c4-000000000017" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_put.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000018" executionId="07E00309-1113-1600-91c4-000000000018" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_System_Message_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000019" executionId="07E00309-1113-1600-91c4-000000000019" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/event/Event_User_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000001A" executionId="07E00309-1113-1600-91c4-00000000001A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/financial_instrument/FI_Forecast_Result_Flat_get.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-00000000001B" executionId="07E00309-1113-1600-91c4-00000000001B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/financial_instrument/FI_Property_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000001C" executionId="07E00309-1113-1600-91c4-00000000001C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/financial_instrument/FI_Property_Value_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000001D" executionId="07E00309-1113-1600-91c4-00000000001D" outcome="Failed">
      <Output>
        <ErrorInfo>
          <Message>Test should have succeeded.</Message>
          <StackTrace>   at App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(SpecTestFile rbFile) in I:\Agent\PROD-James_Bond\_work\8e7d9e21\Solvas Forecast\Spec\App.Db.Slacker\SlackerRunner\SpecsTester.cs:line 28</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/forecast_entity/FE_Entity_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000001E" executionId="07E00309-1113-1600-91c4-00000000001E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/forecast_scenario/FS_Scenario_run.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000001F" executionId="07E00309-1113-1600-91c4-00000000001F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/transformation_matrix/TM_Characteristic_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000020" executionId="07E00309-1113-1600-91c4-000000000020" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/transformation_matrix/TM_Criterion_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000021" executionId="07E00309-1113-1600-91c4-000000000021" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/stored_procedures/transformation_matrix/TM_Schedule_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000022" executionId="07E00309-1113-1600-91c4-000000000022" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_functions/data_dictionary/tf_DD_Object_Data_Check.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000023" executionId="07E00309-1113-1600-91c4-000000000023" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_functions/data_dictionary/tf_DD_Property.rb)" duration="00:00:04.0000000" testId="07E00309-1113-1600-91c4-000000000024" executionId="07E00309-1113-1600-91c4-000000000024" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_triggers/trg_Config_Value_put.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000025" executionId="07E00309-1113-1600-91c4-000000000025" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app/table_triggers/trg_DD_Property.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000026" executionId="07E00309-1113-1600-91c4-000000000026" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(app_clr/stored_procedures/Result_Sets_Schema_get.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000027" executionId="07E00309-1113-1600-91c4-000000000027" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="App.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(etl/stored_procedures/DL_Package_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000028" executionId="07E00309-1113-1600-91c4-000000000028" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of LookupScheduleSpec, LoadScheduleFromXml works correctly" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000029" executionId="07E00309-1113-1600-91c4-000000000029" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of UtilityMethodsSpec, MoreMath Max methods works correctly" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000002A" executionId="07E00309-1113-1600-91c4-00000000002A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of UtilityMethodsSpec, MoreMath Min methods works correctly" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000002B" executionId="07E00309-1113-1600-91c4-00000000002B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of UtilityMethodsSpec, ClosestBinarySearch method works correctly" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000002C" executionId="07E00309-1113-1600-91c4-00000000002C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of LoadXmlDocumentFromXmlString, LoadXmlDocumentFromXmlString works correctly for Case: Valid XML String" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000002D" executionId="07E00309-1113-1600-91c4-00000000002D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of LoadXmlDocumentFromXmlString, LoadXmlDocumentFromXmlString works correctly for Case: Malformed XML" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000002E" executionId="07E00309-1113-1600-91c4-00000000002E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a PMT result, PMT works correctly for Using BeginningOfPeriod" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000002F" executionId="07E00309-1113-1600-91c4-00000000002F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a PMT result, PMT works correctly for Using EndOfPeriod" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000030" executionId="07E00309-1113-1600-91c4-000000000030" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a PMT result, PMT works correctly for Using future value with BeginningOfPeriod" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000031" executionId="07E00309-1113-1600-91c4-000000000031" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a PMT result, PMT works correctly for Using future value with EndOfPeriod" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000032" executionId="07E00309-1113-1600-91c4-000000000032" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an SingleMonthMortality result, SingleMonthMortality works correctly for Case 1" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000033" executionId="07E00309-1113-1600-91c4-000000000033" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an SingleMonthMortality result, SingleMonthMortality works correctly for Case 2" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000034" executionId="07E00309-1113-1600-91c4-000000000034" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an SingleMonthMortality result, SingleMonthMortality works correctly for Case 3" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000035" executionId="07E00309-1113-1600-91c4-000000000035" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a SinglePeriodStraighLine result, SinglePeriodStraightLine works correctly for Case 1" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000036" executionId="07E00309-1113-1600-91c4-000000000036" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a SinglePeriodStraighLine result, SinglePeriodStraightLine works correctly for Case 2" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000037" executionId="07E00309-1113-1600-91c4-000000000037" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a SinglePeriodStraighLine result, SinglePeriodStraightLine works correctly for Case 3" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000038" executionId="07E00309-1113-1600-91c4-000000000038" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: Non-XML: Unicode Escapes: Error Expected" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000039" executionId="07E00309-1113-1600-91c4-000000000039" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Child Elements: Unicode Escapes" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000003A" executionId="07E00309-1113-1600-91c4-00000000003A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Unicode Escapes Only" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000003B" executionId="07E00309-1113-1600-91c4-00000000003B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Unicode Escapes and Non-Unicode Escapes" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000003C" executionId="07E00309-1113-1600-91c4-00000000003C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000003D" executionId="07E00309-1113-1600-91c4-00000000003D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes: Malformed XML: Closing Tag same as Open Tag" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000003E" executionId="07E00309-1113-1600-91c4-00000000003E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes: Malformed XML: Not Closed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000003F" executionId="07E00309-1113-1600-91c4-00000000003F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given the C# Method UnescapeUnicode result, UnescapeUnicode works correctly for Case: XML: Non-Unicode Escapes: Malformed XML: Open Tag Only" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000040" executionId="07E00309-1113-1600-91c4-000000000040" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Attribute does not exist" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000041" executionId="07E00309-1113-1600-91c4-000000000041" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with value" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000042" executionId="07E00309-1113-1600-91c4-000000000042" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with empty value" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000043" executionId="07E00309-1113-1600-91c4-000000000043" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with null value" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000044" executionId="07E00309-1113-1600-91c4-000000000044" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid attribute name with padded spaces" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000045" executionId="07E00309-1113-1600-91c4-000000000045" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Malformed XML Element" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000046" executionId="07E00309-1113-1600-91c4-000000000046" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlAttributeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Duplicate attribute names" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000047" executionId="07E00309-1113-1600-91c4-000000000047" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node with value" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000048" executionId="07E00309-1113-1600-91c4-000000000048" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node without value and contains subnode" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000049" executionId="07E00309-1113-1600-91c4-000000000049" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid subnode with value" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000004A" executionId="07E00309-1113-1600-91c4-00000000004A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid subnode without value" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000004B" executionId="07E00309-1113-1600-91c4-00000000004B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node with null value" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000004C" executionId="07E00309-1113-1600-91c4-00000000004C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Valid node with padded spaces" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000004D" executionId="07E00309-1113-1600-91c4-00000000004D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Invalid tag search" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000004E" executionId="07E00309-1113-1600-91c4-00000000004E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Malformed XML Element" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000004F" executionId="07E00309-1113-1600-91c4-00000000004F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlNodeIsEmptyOrNull, XmlAttributeIsEmptyOrNull works correctly for Case: Duplicate nodes" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000050" executionId="07E00309-1113-1600-91c4-000000000050" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlStringIsWellFormed, XmlStringIsWellFormed works correctly for Case: Valid XML String" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000051" executionId="07E00309-1113-1600-91c4-000000000051" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of XmlStringIsWellFormed, XmlStringIsWellFormed works correctly for Case: Malformed XML String" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000052" executionId="07E00309-1113-1600-91c4-000000000052" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of StringSplitSpec, Current method works correctly" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000053" executionId="07E00309-1113-1600-91c4-000000000053" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of StringSplitSpec, MoveNext method works correctly" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000054" executionId="07E00309-1113-1600-91c4-000000000054" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an instance of StringSplitSpec, Reset method works correctly" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000055" executionId="07E00309-1113-1600-91c4-000000000055" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000056" executionId="07E00309-1113-1600-91c4-000000000056" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000057" executionId="07E00309-1113-1600-91c4-000000000057" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000058" executionId="07E00309-1113-1600-91c4-000000000058" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000059" executionId="07E00309-1113-1600-91c4-000000000059" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000005A" executionId="07E00309-1113-1600-91c4-00000000005A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000005B" executionId="07E00309-1113-1600-91c4-00000000005B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000005C" executionId="07E00309-1113-1600-91c4-00000000005C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000005D" executionId="07E00309-1113-1600-91c4-00000000005D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000005E" executionId="07E00309-1113-1600-91c4-00000000005E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000005F" executionId="07E00309-1113-1600-91c4-00000000005F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000060" executionId="07E00309-1113-1600-91c4-000000000060" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000061" executionId="07E00309-1113-1600-91c4-000000000061" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000062" executionId="07E00309-1113-1600-91c4-000000000062" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000063" executionId="07E00309-1113-1600-91c4-000000000063" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000064" executionId="07E00309-1113-1600-91c4-000000000064" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000065" executionId="07E00309-1113-1600-91c4-000000000065" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000066" executionId="07E00309-1113-1600-91c4-000000000066" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000067" executionId="07E00309-1113-1600-91c4-000000000067" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000068" executionId="07E00309-1113-1600-91c4-000000000068" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000069" executionId="07E00309-1113-1600-91c4-000000000069" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000006A" executionId="07E00309-1113-1600-91c4-00000000006A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000006B" executionId="07E00309-1113-1600-91c4-00000000006B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000006C" executionId="07E00309-1113-1600-91c4-00000000006C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000006D" executionId="07E00309-1113-1600-91c4-00000000006D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000006E" executionId="07E00309-1113-1600-91c4-00000000006E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000006F" executionId="07E00309-1113-1600-91c4-00000000006F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000070" executionId="07E00309-1113-1600-91c4-000000000070" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000071" executionId="07E00309-1113-1600-91c4-000000000071" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000072" executionId="07E00309-1113-1600-91c4-000000000072" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000073" executionId="07E00309-1113-1600-91c4-000000000073" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000074" executionId="07E00309-1113-1600-91c4-000000000074" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000075" executionId="07E00309-1113-1600-91c4-000000000075" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000076" executionId="07E00309-1113-1600-91c4-000000000076" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000077" executionId="07E00309-1113-1600-91c4-000000000077" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000078" executionId="07E00309-1113-1600-91c4-000000000078" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000079" executionId="07E00309-1113-1600-91c4-000000000079" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Add" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000007A" executionId="07E00309-1113-1600-91c4-00000000007A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.GreaterOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000007B" executionId="07E00309-1113-1600-91c4-00000000007B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.LesserOf" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000007C" executionId="07E00309-1113-1600-91c4-00000000007C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Multiply" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000007D" executionId="07E00309-1113-1600-91c4-00000000007D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Overwrite" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000007E" executionId="07E00309-1113-1600-91c4-00000000007E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ApplyModifier result, ApplyModifier works correctly for LookupType.ModifierType.Subtract" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000007F" executionId="07E00309-1113-1600-91c4-00000000007F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_authorization_verdict.rb)" duration="00:00:44.0000000" testId="07E00309-1113-1600-91c4-000000000080" executionId="07E00309-1113-1600-91c4-000000000080" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_role_authorization_permission.rb)" duration="00:00:10.0000000" testId="07E00309-1113-1600-91c4-000000000081" executionId="07E00309-1113-1600-91c4-000000000081" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(authorization/tf_user_role_strands.rb)" duration="00:00:15.0000000" testId="07E00309-1113-1600-91c4-000000000082" executionId="07E00309-1113-1600-91c4-000000000082" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(client_format/boolean_to_client_format.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000083" executionId="07E00309-1113-1600-91c4-000000000083" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_code_part.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000084" executionId="07E00309-1113-1600-91c4-000000000084" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000085" executionId="07E00309-1113-1600-91c4-000000000085" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/config_value_put.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000086" executionId="07E00309-1113-1600-91c4-000000000086" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(config/tf_config_value.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000087" executionId="07E00309-1113-1600-91c4-000000000087" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(context_info/context_info.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000088" executionId="07E00309-1113-1600-91c4-000000000088" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(excel_export/excel_export_meta.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000089" executionId="07E00309-1113-1600-91c4-000000000089" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(excel_export/excel_export_seed.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000008A" executionId="07E00309-1113-1600-91c4-00000000008A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(holiday_schedule/put_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000008B" executionId="07E00309-1113-1600-91c4-00000000008B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/is_valid_lookup_code.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000008C" executionId="07E00309-1113-1600-91c4-00000000008C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/lookup_code_description.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000008D" executionId="07E00309-1113-1600-91c4-00000000008D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_code/tf_lookup_code.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-00000000008E" executionId="07E00309-1113-1600-91c4-00000000008E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(lookup_type/put_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000008F" executionId="07E00309-1113-1600-91c4-00000000008F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(message/tf_message.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000090" executionId="07E00309-1113-1600-91c4-000000000090" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(model/model_field_base_type_name.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000091" executionId="07E00309-1113-1600-91c4-000000000091" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(model/model_type_format.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000092" executionId="07E00309-1113-1600-91c4-000000000092" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(operation_result/add_operation_message.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000093" executionId="07E00309-1113-1600-91c4-000000000093" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(report_destination/report_destination_seed.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000094" executionId="07E00309-1113-1600-91c4-000000000094" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/separated_string_to_string_list.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000095" executionId="07E00309-1113-1600-91c4-000000000095" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/string_list_to_table.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000096" executionId="07E00309-1113-1600-91c4-000000000096" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(string_list/table_to_string_list.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000097" executionId="07E00309-1113-1600-91c4-000000000097" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/maker_checker.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000098" executionId="07E00309-1113-1600-91c4-000000000098" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/role_put.rb)" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-000000000099" executionId="07E00309-1113-1600-91c4-000000000099" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_del.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000009A" executionId="07E00309-1113-1600-91c4-00000000009A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_id.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000009B" executionId="07E00309-1113-1600-91c4-00000000009B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_put.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000009C" executionId="07E00309-1113-1600-91c4-00000000009C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_put_get.rb)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000009D" executionId="07E00309-1113-1600-91c4-00000000009D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Beachcomber.Db.Slacker.SlackerRunner.SpecsTester.RunSpecs(user/user_role_association_action.rb)" duration="00:00:02.0000000" testId="07E00309-1113-1600-91c4-00000000009E" executionId="07E00309-1113-1600-91c4-00000000009E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns true if characters are passed when expecting numbers." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000009F" executionId="07E00309-1113-1600-91c4-00000000009F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns false if numbers are passed when expecting numbers." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A0" executionId="07E00309-1113-1600-91c4-0000000000A0" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting date in MMM/d/yyyy." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A1" executionId="07E00309-1113-1600-91c4-0000000000A1" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting date in MMMM/d/yyyy." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A2" executionId="07E00309-1113-1600-91c4-0000000000A2" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns true if invalid characters are passed when expecting literals." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A3" executionId="07E00309-1113-1600-91c4-0000000000A3" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns true if numbers are passed to escaped numeric format value." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A4" executionId="07E00309-1113-1600-91c4-0000000000A4" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns false if date are passed when expecting date." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A5" executionId="07E00309-1113-1600-91c4-0000000000A5" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns false if month is passed when expecting month." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A6" executionId="07E00309-1113-1600-91c4-0000000000A6" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns false if day of week is passed when expecting day of week." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A7" executionId="07E00309-1113-1600-91c4-0000000000A7" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.IsInvalidClientFormat, it returns false if date and time are passed when expecting date and time." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A8" executionId="07E00309-1113-1600-91c4-0000000000A8" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.ToClientFormat, it formats year values correctly." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000A9" executionId="07E00309-1113-1600-91c4-0000000000A9" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.ToClientFormat, it formats month values correctly." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000AA" executionId="07E00309-1113-1600-91c4-0000000000AA" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.ToClientFormat, it formats weekday values correctly." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000AB" executionId="07E00309-1113-1600-91c4-0000000000AB" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.ToClientFormat, it formats day of the month values correctly." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000AC" executionId="07E00309-1113-1600-91c4-0000000000AC" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.ToClientFormat, it formats hour values correctly." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000AD" executionId="07E00309-1113-1600-91c4-0000000000AD" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.ToClientFormat, it formats second values correctly." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000AE" executionId="07E00309-1113-1600-91c4-0000000000AE" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.ToClientFormat, it formats special cases and complex formats correctly." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000AF" executionId="07E00309-1113-1600-91c4-0000000000AF" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Date.ToClientFormat, it passes performance test for large number of iterations" duration="00:00:05.0000000" testId="07E00309-1113-1600-91c4-0000000000B0" executionId="07E00309-1113-1600-91c4-0000000000B0" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given ClientFormat.IsInvalidNumber, it returns true if characters are passed when expecting numbers." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000B1" executionId="07E00309-1113-1600-91c4-0000000000B1" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed when expecting numbers." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000B2" executionId="07E00309-1113-1600-91c4-0000000000B2" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed when expecting numbers with additional format info." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000B3" executionId="07E00309-1113-1600-91c4-0000000000B3" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given ClientFormat.IsInvalidNumber, it returns false if numbers are passed with empty format." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000B4" executionId="07E00309-1113-1600-91c4-0000000000B4" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given ClientFormat.IsInvalidNumber, it returns true if characters are passed with empty format." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000B5" executionId="07E00309-1113-1600-91c4-0000000000B5" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Text.RegexReplace, it replaces non-numeric values correctly." duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000B6" executionId="07E00309-1113-1600-91c4-0000000000B6" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a preset ActiveDirectoryGroupMonitor.DbCodeToTimerMap, ActiveDirectoryGroupMonitor correctly monitors the groups" duration="00:00:02.0000000" testId="07E00309-1113-1600-91c4-0000000000B7" executionId="07E00309-1113-1600-91c4-0000000000B7" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a set of templates, the template is generated successfully" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000B8" executionId="07E00309-1113-1600-91c4-0000000000B8" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a BrokerQueueClient should be able to process one message at a time" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000B9" executionId="07E00309-1113-1600-91c4-0000000000B9" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a BrokerQueueClient should be able to process multiple messages at a time" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000BA" executionId="07E00309-1113-1600-91c4-0000000000BA" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given CommonMarkHelper, it correctly converts a Markdown input to a text input" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000BB" executionId="07E00309-1113-1600-91c4-0000000000BB" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given CommonMarkHelper, it correctly converts a Markdown input to HTML input" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000BC" executionId="07E00309-1113-1600-91c4-0000000000BC" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a model specification can be extracted based on a model stored procedure" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000BD" executionId="07E00309-1113-1600-91c4-0000000000BD" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a deep model tree can be generated based on a single model name" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000BE" executionId="07E00309-1113-1600-91c4-0000000000BE" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a deep model tree can be deducted based on a list of model names" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000BF" executionId="07E00309-1113-1600-91c4-0000000000BF" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, the system throws an exception when trying to get a non-existing model" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000C0" executionId="07E00309-1113-1600-91c4-0000000000C0" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given DotLiquidExtensions, tag &quot;bullet_details&quot; is correctly registered and performs as expected" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000C1" executionId="07E00309-1113-1600-91c4-0000000000C1" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given DotLiquidExtensions, tag &quot;bullet_list&quot; is correctly registered and performs as expected" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000C2" executionId="07E00309-1113-1600-91c4-0000000000C2" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given DotLiquidExtensions, filter &quot;zn&quot; is correctly registered and performs as expected" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000C3" executionId="07E00309-1113-1600-91c4-0000000000C3" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given DotLiquidExtensions, filter &quot;markdown&quot; is correctly registered and performs as expected" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000C4" executionId="07E00309-1113-1600-91c4-0000000000C4" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given DotLiquidExtensions, ExcelExportDatasetDimensions can be used in a dotLiquid template to perform arithmetic operations" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000C5" executionId="07E00309-1113-1600-91c4-0000000000C5" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport handles hierarchical data" duration="00:00:01.0000000" testId="07E00309-1113-1600-91c4-0000000000C6" executionId="07E00309-1113-1600-91c4-0000000000C6" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ColumnAddress works as expected" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000C7" executionId="07E00309-1113-1600-91c4-0000000000C7" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures and appropriately overrides the return_type request parameter" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000C8" executionId="07E00309-1113-1600-91c4-0000000000C8" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport correctly handles various style exports" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000C9" executionId="07E00309-1113-1600-91c4-0000000000C9" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures with custom Excel template" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000CA" executionId="07E00309-1113-1600-91c4-0000000000CA" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures by calling them with return_type=EXCEL" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000CB" executionId="07E00309-1113-1600-91c4-0000000000CB" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport correctly uses the custom excel target file returned by the metadata" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000CC" executionId="07E00309-1113-1600-91c4-0000000000CC" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport correctly generates output file name based on the grid title" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000CD" executionId="07E00309-1113-1600-91c4-0000000000CD" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport correctly handles grid strored procedures with custom Excel templates" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000CE" executionId="07E00309-1113-1600-91c4-0000000000CE" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport populates a default excel workbook with the resultset of a stored procedure" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000CF" executionId="07E00309-1113-1600-91c4-0000000000CF" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport populates an excel workbook with multiple resultsets from a stored procedure" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D0" executionId="07E00309-1113-1600-91c4-0000000000D0" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport correctly handles type conversions" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D1" executionId="07E00309-1113-1600-91c4-0000000000D1" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, ExcelExport correctly handles Excel export metadata" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D2" executionId="07E00309-1113-1600-91c4-0000000000D2" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ExecutionSurface with preloaded test data, the surface contents is as expected" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D3" executionId="07E00309-1113-1600-91c4-0000000000D3" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ExecutionSurface with preloaded test data, authorization works as expected" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D4" executionId="07E00309-1113-1600-91c4-0000000000D4" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an ExecutionSurface with preloaded test data, authorization works as expected as it relates to role inheritance" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D5" executionId="07E00309-1113-1600-91c4-0000000000D5" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an Xml string with an array, it correctly gets converted to an IEnumerable" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D6" executionId="07E00309-1113-1600-91c4-0000000000D6" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an object and a Flex, extension method ToObject properly populates an object with the contents of a Flex" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D7" executionId="07E00309-1113-1600-91c4-0000000000D7" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an object and a Flex, extension method ToObject properly populates an object with the contents of a Flex ins strict mode" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D8" executionId="07E00309-1113-1600-91c4-0000000000D8" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an object and a Flex, extension method ToObject properly throws in strict mode" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000D9" executionId="07E00309-1113-1600-91c4-0000000000D9" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a Flex object, it correctly gets converted to an Xml string" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000DA" executionId="07E00309-1113-1600-91c4-0000000000DA" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an IEnumerable&lt;T&gt;, extension method ForEach can be used to enumerate all its elements" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000DB" executionId="07E00309-1113-1600-91c4-0000000000DB" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an Xml string, it can be converted to a Flex" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000DC" executionId="07E00309-1113-1600-91c4-0000000000DC" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Flex, it can be converted to Json" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000DD" executionId="07E00309-1113-1600-91c4-0000000000DD" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given Flex, a Json value can be converted to a Flex" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000DE" executionId="07E00309-1113-1600-91c4-0000000000DE" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a grid meta can converted to Json" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000DF" executionId="07E00309-1113-1600-91c4-0000000000DF" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a string, it can be underscored using the Inflector extension methods" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E0" executionId="07E00309-1113-1600-91c4-0000000000E0" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a Json string, it correctly converts it to a .NET object" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E1" executionId="07E00309-1113-1600-91c4-0000000000E1" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an arbitrary Flex, it correctly converts it to a Json string" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E2" executionId="07E00309-1113-1600-91c4-0000000000E2" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given an arbitrary anonymous object, it correctly converts it to a Json string" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E3" executionId="07E00309-1113-1600-91c4-0000000000E3" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, calling a sproc which divides by zero throws an exception (ANSI_WARNINGS is set to ON)" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E4" executionId="07E00309-1113-1600-91c4-0000000000E4" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, sprocs can be executed dynamically through its Sproc property" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E5" executionId="07E00309-1113-1600-91c4-0000000000E5" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, sprocs with named params can be invoked" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E6" executionId="07E00309-1113-1600-91c4-0000000000E6" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, sprocs with optional params can be invoked" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E7" executionId="07E00309-1113-1600-91c4-0000000000E7" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, sprocs with 'out' params can be invoked" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E8" executionId="07E00309-1113-1600-91c4-0000000000E8" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, sprocs with xml 'out' params can be invoked" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000E9" executionId="07E00309-1113-1600-91c4-0000000000E9" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a sproc can be called with arbitrary number of parameters - it will ignore parameters which it does not accept" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000EA" executionId="07E00309-1113-1600-91c4-0000000000EA" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, an array of objects is passed to the udnerlying sproc as a table" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000EB" executionId="07E00309-1113-1600-91c4-0000000000EB" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, an array with disjointed elements can be passed as a parameter to a sproc which takes a table valued parameter" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000EC" executionId="07E00309-1113-1600-91c4-0000000000EC" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a complex object can be passed to a sproc which takes an XML input parameter" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000ED" executionId="07E00309-1113-1600-91c4-0000000000ED" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, an object is passed to the udnerlying sproc as a table" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000EE" executionId="07E00309-1113-1600-91c4-0000000000EE" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, an array of objects is passed to the udnerlying sproc as a table and used by it" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000EF" executionId="07E00309-1113-1600-91c4-0000000000EF" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a sproc's resultset which contains a hierarchy_child_id and hierarchy_parent_id is compiled into a hierarchical resultset" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F0" executionId="07E00309-1113-1600-91c4-0000000000F0" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a hierarchical result pushes all orphans to the top of the hierarchy" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F1" executionId="07E00309-1113-1600-91c4-0000000000F1" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a hierarchical result does not omit children of missing parents when there is a single record in the recordset" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F2" executionId="07E00309-1113-1600-91c4-0000000000F2" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a hierarchical result omits shallow circular reference chains" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F3" executionId="07E00309-1113-1600-91c4-0000000000F3" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a hierarchical result omits deep circular reference chains" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F4" executionId="07E00309-1113-1600-91c4-0000000000F4" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a sproc which accepts INT parameters can be called with a string representation of an INT" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F5" executionId="07E00309-1113-1600-91c4-0000000000F5" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a sproc which accepts INT parameters can be called with an empty string which is internally converted to NULL" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F6" executionId="07E00309-1113-1600-91c4-0000000000F6" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a sproc returns an error message in the operation result and stops the sproc execution when an error message is reported" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F7" executionId="07E00309-1113-1600-91c4-0000000000F7" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, an error message includes the SQL call-stack when enabled" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F8" executionId="07E00309-1113-1600-91c4-0000000000F8" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a sproc returns a warning message in the operation result and stops the sproc execution when a warning message is reported" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000F9" executionId="07E00309-1113-1600-91c4-0000000000F9" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a sproc returns an info message in the operation result and does not stop the sproc execution when an info message is reported" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000FA" executionId="07E00309-1113-1600-91c4-0000000000FA" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a sproc can respond with a collection of messages" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000FB" executionId="07E00309-1113-1600-91c4-0000000000FB" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a nested sproc returns an error message in the operation result and stops the sproc execution when an error message is reported" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000FC" executionId="07E00309-1113-1600-91c4-0000000000FC" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a nested sproc returns a warning message in the operation result and stops the sproc execution when a warning message is reported" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000FD" executionId="07E00309-1113-1600-91c4-0000000000FD" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a nested sproc returns an info message in the operation result and does not stop the sproc execution when an info message is reported" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000FE" executionId="07E00309-1113-1600-91c4-0000000000FE" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, a nested sproc can respond with a collection of messages" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-0000000000FF" executionId="07E00309-1113-1600-91c4-0000000000FF" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc can be called with a pre and post closure with an open connection" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000100" executionId="07E00309-1113-1600-91c4-000000000100" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, DirectFileController can be used to import an Excel file directly into a table" duration="00:00:04.0000000" testId="07E00309-1113-1600-91c4-000000000101" executionId="07E00309-1113-1600-91c4-000000000101" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, DirectFileController offers option to load worksheets with missing fields" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000102" executionId="07E00309-1113-1600-91c4-000000000102" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, DirectFileController offers option to load worksheets with extra fields" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000103" executionId="07E00309-1113-1600-91c4-000000000103" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, DirectFileController detects missing worksheets" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000104" executionId="07E00309-1113-1600-91c4-000000000104" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, DirectFileController offers an option to run a post-load stored procedure as part of the import operation" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000105" executionId="07E00309-1113-1600-91c4-000000000105" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, DirectFileController correctly processes operation result messages generated by the post-load stored procedure" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000106" executionId="07E00309-1113-1600-91c4-000000000106" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Assert" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000107" executionId="07E00309-1113-1600-91c4-000000000107" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, SprocController can call simple sprocs with parameters" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000108" executionId="07E00309-1113-1600-91c4-000000000108" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, SprocController correctly handles ISO 8601 dates as parameters" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000109" executionId="07E00309-1113-1600-91c4-000000000109" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, SprocController can call sprocs with XML out parameters" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000010A" executionId="07E00309-1113-1600-91c4-00000000010A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, SprocController correctly handles XML typed elements" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000010B" executionId="07E00309-1113-1600-91c4-00000000010B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, SprocController correctly reports field SQL data types" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000010C" executionId="07E00309-1113-1600-91c4-00000000010C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a list of records on GET without a specified ID" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000010D" executionId="07E00309-1113-1600-91c4-00000000010D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a single record when GET is called with an ID parameter" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000010E" executionId="07E00309-1113-1600-91c4-00000000010E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller creates a single new record when _put sproc is called" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000010F" executionId="07E00309-1113-1600-91c4-00000000010F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller performs a record edit when _put sproc is called on an existing record" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000110" executionId="07E00309-1113-1600-91c4-000000000110" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a single property-value filter is specified as a request parameter" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000111" executionId="07E00309-1113-1600-91c4-000000000111" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a multi property-value filter is specified as a request parameter" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000112" executionId="07E00309-1113-1600-91c4-000000000112" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when an exact string match filter is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000113" executionId="07E00309-1113-1600-91c4-000000000113" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when an exact string match filter is executed with the wrong string value" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000114" executionId="07E00309-1113-1600-91c4-000000000114" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when a &quot;like&quot; string match filter is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000115" executionId="07E00309-1113-1600-91c4-000000000115" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when an exact string match filter is executed with the wrong string value" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000116" executionId="07E00309-1113-1600-91c4-000000000116" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric greater than comparison is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000117" executionId="07E00309-1113-1600-91c4-000000000117" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric greater than comparison is executed with a number equal to the max" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000118" executionId="07E00309-1113-1600-91c4-000000000118" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric less than comparison is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000119" executionId="07E00309-1113-1600-91c4-000000000119" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric less than comparison is executed with a number equal to the min" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000011A" executionId="07E00309-1113-1600-91c4-00000000011A" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when numeric equal to comparison is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000011B" executionId="07E00309-1113-1600-91c4-00000000011B" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when numeric equal to comparison is executed with a number which does not exist in the database model" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000011C" executionId="07E00309-1113-1600-91c4-00000000011C" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date greater than comparison is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000011D" executionId="07E00309-1113-1600-91c4-00000000011D" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date greater than comparison is executed with a number equal to the max" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000011E" executionId="07E00309-1113-1600-91c4-00000000011E" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date less than comparison is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-00000000011F" executionId="07E00309-1113-1600-91c4-00000000011F" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date less than comparison is executed with a number equal to the min" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000120" executionId="07E00309-1113-1600-91c4-000000000120" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when date equal to comparison is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000121" executionId="07E00309-1113-1600-91c4-000000000121" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when date equal to comparison is executed with a date which does not exist in the database model" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000122" executionId="07E00309-1113-1600-91c4-000000000122" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when true boolean equal to comparison is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000123" executionId="07E00309-1113-1600-91c4-000000000123" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns a filtered list of records when false boolean equal to comparison is executed" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000124" executionId="07E00309-1113-1600-91c4-000000000124" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when true boolean equal to comparison is executed against a field which is all false" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000125" executionId="07E00309-1113-1600-91c4-000000000125" outcome="Passed" />
    <UnitTestResult startTime="2008-01-01T00:00:01.0000000+10:00" computerName="localHost" endTime="2008-01-01T00:00:02.0000000+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" testName="Given a BeachcomberContext, Sproc Controller returns an empty list of records when false boolean equal to comparison is executed against a field which is all true" duration="00:00:00.0000000" testId="07E00309-1113-1600-91c4-000000000126" executionId="07E00309-1113-1600-91c4-000000000126" outcome="Passed" />
  </Results>
</TestRun>